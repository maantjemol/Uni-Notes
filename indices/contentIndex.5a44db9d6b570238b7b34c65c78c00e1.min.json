{"/":{"title":"Uni","content":"## Courses:\n- [[Foundations of Computer Science]]\n- [[Calculus]]\n- [I \u0026 E introductie](I%20en%20E%20Introductie.md)\n- [[Essentials of computer systems]] \n- [[Studying and presenting]]\n---\nTags:  #Uni  ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/Academic-Fraud":{"title":"Academic Fraud","content":"\n# Academic Fraud\n**course:**\n## Definition\n- Plagiaat \n\t- Alles wat je inlevert wordt veronderstel dat het je eigen werk is, als dat niet zo is moet je het ff verwijzen naar bronnen. \n- Cheating \n- Falsifying documents \n- misrepresenting results \n- \n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Academic Fraud #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Angles":{"title":"Angles","content":"\n# Angles\n**course:**\n## Definition\nA circle consists of 360 deg\nThey got bored and thought of [[Radians]]\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Angles #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Application-layer":{"title":"Application layer","content":"\n# Application layer\n**course:**\n## Definition\nAll the applications that interact with the network, examples are: Web \u0026 HTTP, Email, [[DNS]], P2P \u0026 Streaming. Interacts with the [[Transport layer]]. [[protocols]] are used to interact between applications an [[Transport layer]] \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Application layer #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Assembler":{"title":"Assembler","content":"\n# Assembler\n**course:**\n## Definition\nConverts human readable code to machine instructions\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Assembler #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/BPM":{"title":"BPM","content":"\n# Bedrijfprocesmodellering\n**course:**\n## Definition\nHet representeren van processes zodat het proces geautoriseerd en verbeterd kan worden.\n\n## Het doel:\nHet ondersteunen van een of meerdere doelstellingen binnen een [[organisatie]], zoals:\n- Kwaliteit management \n- Risico beheer \n- Compliance (voldoen aan wet-/regelgeving)\n- Communicatie \n\nHet bieden van ondersteuning aan veranderingen, zoals:\n- Fusie \n- Reorganisatie \n- Uitbesteding\n\n## Verschillende methoden:\n- BPMN\n- DEMO\n- DFD\n- IPO\n- IDEFo\n- Flowchart\n- Supply chain\n- Waardeketenmodel\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #BPM #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Bijective":{"title":"Bijective","content":"\n## Surjective (onto):\nEvery row in echlon form contains a pivot.\n\n## Injective (one-to-one):\nEvery column in echlon form contains a pivot.\n\n## Bijective:\nEvery column \u0026 every row in echlon form contains a pivot. The matrix is square.\n\n\n","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Boolean-operations":{"title":"Boolean operations","content":"\n","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Business-Intelligence":{"title":"Business Intelligence","content":"\n\u003e[!abstract] Definition\n\u003e\n\u003eBusiness intelligence (BI) is an umbrella term that includes the applications, infrastructure and tools, and best practices that enable access to and analysis of information to improve and optimize decisions and performance.\n\n- Tijd / personalisatie, risico \n\t- Onderschat niet, kost veel tijd en geld.\n- Interne en Externe [[Data]] \n\t- Vooral interne data\n\t- Als het teveel externe data is het waarschijnlijk niet business intelligence \n- ETL, data warehouse / data marts en OLAP\n- Primaire en secundaire processen ondersteunen:\n\t- Historisch terug kijken. hoeveel hebben we verkocht 2021 vs 2022","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/CDP":{"title":"","content":"\u003e[!abstract] Definition\n\u003e\n\u003eCustomer data platform (CDP) is een marketing systeem dat is opgebouwd uit verschillende software.\n\n- Nadelen:\n\t- Privacy is super moeilijk vooral met europese regelgeving \n\t- Je kan ook teveel data hebben; door de bomen het bos niet meer zien\n- Primaire vs ondersteunende processen\n- 1st and 3rd party data","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/CPU":{"title":"CPU","content":"\n# CPU\n**course:**\n## Definition\nA CPU is a Central Processing Unit. It consist of multiple Cores. Every core consist of e few virtual cores with [[Threads]] in it.\n\nA CPU is build up of different parts:\n- ALU | Arithmetic logic unit\n\t- You can send intructions to the ALU to let it carry out the instructions. \n\t- It interacts with otner parts of the [[CPU]] \n- Instruction decoder:\n\t- Decodes the instructions in [[memory]] and sends it to the ALU for use.\n- [[program counter]] is used to point to the part of the program in memory the instruction decoder needs to send to the ALU.\n- The program in the memory is build by the [[assembler]].\n\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #CPU #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Cadeautjes":{"title":"Cadeautjes","content":"","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Calculus":{"title":"Calculus","content":"\n## Notes \u0026 Ideas\n- [[asymptote]]\n- [[factorization]]\n- [[functions]]\n- [[Limits]]\n- [[Palinomial]]\n- [[Angles]]\n- [[Continuity]]\n- [[intigers]]\n- [[root]]\n- [[Radians]]\n- [[Continues functions]]\n- [[Graphing functions]]\n- [[Derivative]]\n\t- [[Mean Value Theorem]]\n- [[Exponentials and Log]]\n- [[Extremes]]\n- [[Critical point]]\n- [[Drawing functions]]\n- [[Taylor Polynomials]]\n\n## Assignments\n- Make sure you're registered \n- No graphical calculator \n## Lectures\n## Extras\n### Grade breakdown\n\n\n\n### Grading scale\n### Tips\n### Emails \u0026 Resources\n### Important dates\n### Classmates\n\n## Refrences:\n- [[Uni]]\n\n---\nTags: #Course #Calculus #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Chatbots":{"title":"Chatbots","content":"\n\u003e[!abstract] Definition\n\u003e\n\u003eChatbots zijn geautoriseerde systemen die communiceren via een vraag en antwoord systeem. Dit doen ze met behulp van AI en een van te voren vastgestelde database\n\n- Chatbots \u0026 AI/Deep Learning \n- NLP hoeft niet \n- IT leveranciers ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Closure":{"title":"Closure","content":"\n# Closure\n## Definition\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Combinational-logic":{"title":"Combinational logic","content":"\n# Combinational logic\n**course:**\n## Definition\n**Boolean logic:**\n![[Screenshot 2022-09-21 at 10.06.13.png|100]]\n\n**Logic gates:**\nYou can use logic gates to implement alot of things. They are build from [[transistor]]s \n\n**Clock:**\nThe clock is used to time computations.\n\n**Sequential logic:**\n- Latches/flip-flops: ^b656ea\n\t- a flipflop stores a single binary number. \n\t- ![[Screenshot 2022-09-21 at 10.11.37.png|100]]\n- State machine:\n\t![[Screenshot 2022-09-21 at 10.15.43.png|400]]\nThe state machine is used to loop over the state [[memory]] \n\n- Parallelism:\n\t- There are happening a lot of things in paralell, otherwise it would be really slow \n\n**Hardware description language:**\nA programming language to describe you hardware. There are a few different ones like Verilog of VHDL.\n\n**Digital building blocks:**\ncombinatorial blocks:\n- 1-bit full adder: \n\t- Adds 2 bits with a carrier:\n\t- ![[Screenshot 2022-09-21 at 10.23.30.png|150]]\n\t- [[memory]]\n\n**Logic arrays:**\n- array of logic gates, You can not change the hardware after you build it.\n\n**FPGA:**\nField programmable gate array. You can change the logic arrays to build your own chips. It is reversable\n\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Combinational logic #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Composition":{"title":"Composition","content":"\n# Composition\n## Definition\n![[Pasted image 20221013091045.png]]\n![[Pasted image 20221013092327.png]]\n\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Context-switching":{"title":"Context switching","content":"\n# Context switching\n**course:**\n## Definition\nProcedure that a computer's CPU follows to change from one task (or [[process]]) to another while ensuring that the tasks do not conflict. It does this by saving diffrent processes to [[memory]]. When we switch to a new [[process]] we use the information stored in [[RAM]] about that process to switch to the other [[process]].\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Context switching #Uni ","lastmodified":"2022-12-10T12:46:18.90740121Z","tags":null},"/Continues-functions":{"title":"Continues functions","content":"\n# Continues functions\n**course:**\n## Definition\n*Interior point:*\nWe say that a [[functions]] f is CONTINUOS at an interior point c of its domain \n1. $\\lim_{x\\to c} f(x)=f(c)$\n*Boundary points:*\nWe say that: \n2. $f()$ is right continuous at c if $\\lim_{x\\to c+} f(x)=f(c)$ \n3. $f()$ is left continuous at c if $\\lim_{x\\to c-} f(x)=f(c)$ \n\nWe have a finite closed interval [a, b] \nwe say that $f$ is continuous  on [a, b] if the previous rules 1, 2 \u0026 3 apply\n\n## Theorem 1:\n$f$ is continuous on $[a, b]$, finite closed interval:\nThen there exist at least two points p,q in $[a, b]$\nsuch that $f\\left( p\\right) \\leq f\\left( x\\right) \\leq f\\left( q\\right)$\nFor all x in $[a,b]$\n\n![[Continues functions 2022-09-27 13.23.56.excalidraw]]\n\n## Theorem 2:\nSuppose $f$ is continuous on [a,b] finite closed interval \nSuppose $s$ is in between $f(a), f(b)$\nthen there *exitsts* point c in [a, b]\nsuch that $f(c)=s$\n**Intermediate value theorem**\nLine always crosses red line:\nsuppose $f(a)\u003c0 \\\u0026 f(b) \u003e 0$  then there exists [a,b] $f(c)=0$\n![[Continues functions 2022-09-27 13.29.35.excalidraw]]\n![[Continues functions 2022-09-27 13.37.27.excalidraw]]\n\n### Example:\n![[Continues functions 2022-09-27 13.43.12.excalidraw]]\n\nThis theorem guarentees that there are no roots between the points:\n![[Graphing functions 2022-09-27 13.49.57.excalidraw]]\n\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Continues functions #Uni ","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/Continuity":{"title":"Continuity","content":"\n# Continuity\n**course:**\n## Definition:\nIn mathematics, a continuous function is a function such that a continuous variation of the argument induces a continuous variation of the value of the function. This means that there are no abrupt changes in value, known as discontinuities\n**Continuous or not:**\n- Polynomials: Yes \n- Rational functions: Yes \n- Rational Powers: Yes, on it's domain\n- $\\cos, \\sin, \\tan$: Yes, on their respective domains \n- $|x|$: Yes \n- $sign(x)$: Yes\n\n### Theorem:\nSuppose $f, g$ are continuous at c. then $f\\pm g, f\\cdot g, \\frac{f}{g} \\text{ if } g\\ne0$ are also continuous at c. $f(x)^{1/n}$ if $n$ is even\n\nSuppose $f,g$ such that $f(g(x))$ is definded on an interval containing c. if $\\lim_{x\\to c} g(x) = L$ and if f is continuous at $L$, then $f(g(x))$ is continuous at c\n![[Pasted image 20220923095723.png]]\n## Examples:\nA set of all input (values) accepted by the [[functions]].\n$$f(x)=\\sqrt{x}, \\text{  } x\\ge0 \\text{ \u003c-- this is the domain}$$\n$$g(x)=\\sqrt{4-x^2}$$\nDomain is [-2, 2] want anders negatieve wortel \n\n![[Pasted image 20220923092814.png]]\nEmpty dot means the point is not there.\n![[Pasted image 20220923093426.png]]\n## Types of intervals:\n**Definition:**\n*Continuous:*\nWe say that $f$ is continuous on $I$ if it is continuous at each point of $I$.\n![[Pasted image 20220923092441.png]]\n\n*Interior point:*\nWe say that a [[functions]] f is CONTINUOS at an interior point c of its domain \n$$\\lim_{x\\to c} f(x)=f(c)$$\nThe limit must exists \u0026 $=f(c)$\n![[Pasted image 20220923092045.png]]\n\n*Boundary points:*\nWe say that: \n- $f()$ is right continuous at c if $\\lim_{x\\to c+} f(x)=f(c)$ \n- $f()$ is left continuous at c if $\\lim_{x\\to c-} f(x)=f(c)$ \n![[Pasted image 20220923092135.png]]\n\n\nboundary point = point on one of the edges of the interval.\n![[Pasted image 20220923091356.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Domains #Uni ","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/Counting":{"title":"Counting","content":"## Basics:\nsum rule:\n|A∪B| = |A|+|B|-|A∩B|\nnumber of ways to choose an object from A or B\n\nproduct rule:\n|A x B| = |A|⋅|B|\nnumber of ways to choose an object from A and an object from B\n\npower rule:\n|P(A)| = $2^{|A|}$\nnumber of ways to choose some different objects from A (including no object)\n\n## Choices \nn objects, choice of k(\\*)\n- with/without repetition\nobjects different or not\n- (un)ordered\norder significant; that is sequence versus set\n![[Pasted image 20221110102210.png]]\n\n\u003e[!abstract] Definition\n\u003e\n\u003e$$\\begin{pmatrix}\n  n\\\\ \n  k \n\\end{pmatrix} = \\frac{n!}{k!(n-k)!}$$\n\n\n\n### Example:\n![[Pasted image 20221110102329.png]]\n\n![[Pasted image 20221110102949.png]]\n\n\n## Arrangements:\n### Ordered repetitions:\n\u003e[!abstract] Definition\n\u003e\n\u003e**Ordered, with repetition**\nnumber of sequences of k objects from a set of $n: n^k$\n\n","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/Counting-sets":{"title":"Counting sets","content":"\u003e[!abstract] Definition\n\u003e\n\u003eIf we want to count the elements in the union of sets, we should *not count the common elements twice*\n\nCounting with finite sets:\n![[Pasted image 20220915104201.png]]\n![[Pasted image 20220915104302.png]]\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Counting sets #Uni ","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/Crime-Diggers":{"title":"","content":"Mac adres pdf:\n48:89:e7:69:1f:11","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/Critical-point":{"title":"Critical point","content":"## Definition\nif $f''(x)\u003e0$ on $I = f$ is _concave up_\nif $f''(x)\u003c0$ on $I = f$ is _concave down_\nif $x_{0}$ is an _inflextion point_ and $f''(x)$ EXISTS, $f''(x)=0$\n![[Pasted image 20221014092526.png]]\n## Example:\n$$\\begin{align} \n\tf(x) \u0026= x(2x)e^{-x} \\\\\n\tf''(x)\u0026=(2-2x)e^{-x}+(2x-x^{2})e^{-x}\\cdot(-1)\\\\\n\t\u0026=[2-4x+x^2]e^{-x}\\\\\n\t\\\\\n\tf''(0) = 2 \u003e 0\\\\\n\tf''(2) \u003c 0\n\\end{align}\n$$\n\n## Theorems:\n![[Pasted image 20221014092752.png]]\n![[Pasted image 20221014092759.png]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/DESTEP":{"title":"DESTEP","content":"\n# DESTEP\n**course:**\n## Definition\nAfkorting voor externe omgevings factoren voor [[organisatie]]s.\n*Demografisch*\n*Economisch*\n*Sociaal cultureel*\n*Technologies*\nEcologisch \npolitiek\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #DESTEP #Uni ","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/DIKW-piramide":{"title":"DIKW piramide","content":"\n# DIKW piramide\n**course:**\n## Definition\n![[DIKW piramide 2022-09-27 09.32.01.excalidraw|1000]]\n- [[Data]] is echt: Red, 199 33 44\n- Meaning is de betekenis van deze data, South facing trafic light \n- Context is de context waaring de meaning in kan worden geplaatst, denk aan het stoplicht gaat op rood.\n- Wijsheid is iets doen met deze data, zoals stoppen voor het stoplicht.\n\nContext en wijsheid worden geprobeerd te creeren met kunstmatige inteligentie\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #DIKW piramide #Uni ","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/DMP":{"title":"","content":"\u003e[!abstract] Definition\n\u003e\n\u003eEen data management platform (DMP) wordt gebruikt voor het verzamelen en analyseren van klanten data.\n\n- Heel duur, vooral voor grote bedrijven \n- 1st, 2nd and 3rd party [[Data]]\n- Andere voordelen dan marketing:\n\t- Meer inzichten in klanten relaties \n- DMP vs CMP:\n\t- Third party vs first party \n\t- Second party data moet je vergeten en is echt super vaag \n","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/DNS":{"title":"DNS","content":"\n# DNS\n**course:**\n## Definition\nDomain Name Resolution. \nDomain is turned into ip address with a DNS server. \n1. You ask DNS server: where is webiste\n2. It responds with IP\n3. You go to IP\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #DNS #Uni ","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/Data":{"title":"Data","content":"\n# Data\n**course:**\n## Definition\nInformatie zonder betekenis, denk aan Red, 11 22 44432 234 voor de plaats en status van een stoplicht.\n- [[DIKW piramide]] \n**Mogelijke bronnen van data:**\n- Database \n- Excelsheet\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Data #Uni ","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/Data-Storage":{"title":"Data Storage","content":"\n# Data Storage\n**course:**\n## Definition\nData is stored on a hard disk or flash drive or other storage medium. These devices also need [[driver]]s. To interact with the data on a usb stick you need a file system. A file system does a few things:\n- folders \n- files \n- Corrections: if something goes wrong(power outage) it can stop the write and cancel it\n- access rights\nThe file system is a bridge between the data and the [[operating system]]. With the file system you can read the data.\n## Backlinks\n- [[File System]]\n## Refrences:\n\n---\nTags: #Concept #Data Storage #Uni ","lastmodified":"2022-12-10T12:46:18.91540174Z","tags":null},"/Derivative":{"title":"Derivative","content":"\n# Derivative\n## Uses:\nSee if a func is increasing/decreasing:\nsuppose $f:[a,b] \\to   \\mathbb{R}$\n1. if $f(x_2) \\gt f(x_1)$ where $x_{2} \\gt x_1$ we say $f$ is increasing\n2. if $f(x_2) \u003c f(x_1)$ where $x_{2} \\gt x_1$ we say $f$ is decreasing\n3. if $f(x_2) \\ge f(x_1)$ where $x_{2} \\gt x_1$ we say $f$ is not decreasing\n4. if $f(x_2) \u003c= f(x_1)$ where $x_{2} \\gt x_1$ we say $f$ is not increasing \n\nIf derivative is positive in point $x_1$ in $f'(x_{1)}\u003e0$ then the f is increasing in that point, Between interval: $f:[a,b] \\to   \\mathbb{R}$ \n\n### Example:\n$f(x) = x^{3}- 12x+1$\n$f'(x)=3x^2-12=3(x-2)(x+2)$\n$f'(x)\u003e0$ if $x\u003c-2$  or $x\u003e2$ \n$f'(x) \u003c 0$ if $-2\u003cx\u003c2$\n$f$ is increasing on $(-\\infty, -2)$ and $(2, \\infty)$\n$f$ is decreasing on $(-2,2)$, -2 and 2 are places where $f'(x)=0$ . those points are called critical points.\n## Definition\n**Show differential:**\n$$\\lim_{h\\to 0}\\frac{f(x+h)-f(x)}{h}=f'(x)$$\n![[Derivative 2022-10-04 13.22.30.excalidraw.svg|250]]\n\n\n### Example:\n![[Pasted image 20221004133800.png]]\n\nCompute:\n- Use tricks below: \n\nWe will focus on $C^{1}=[a,b]$  [[functions]], that means the function is [[derivative]] ones and it is continuous.\n\n**Common rules:**\n![[Pasted image 20220930094029.png]]\n$(log_{a}(x))' = \\frac{1}{x}\\ln_a(e)$\n$a^{x}=e^{x\\ln(a)}(ln(a))$\n$x^{x}=e^{x\\ln(x)}(1+\\ln x)$\n## Theorem 1:\nif $f(x)$ is differentiable at $x$, then $f$ is continuous at x\n**Proof:**\n![[Pasted image 20220930094609.png|200]]\n\n## Theorem 3. Product Rule:\n$$(f(x)\\cdot g(x))',\\text{ } f'(x)g(x)-f(x)g'(x)$$\n\n## Theorem 5. Quotient rule:\n$$(\\frac{f(x)}{g(x)})'=\\frac{nat-tan}{n^2}$$\n## Theorem 6. Chain Rule\n![[Pasted image 20220930095930.png]]\n\n## Examples:\n![[Derivative 2022-09-30 09.23.51.excalidraw.svg|200]]![[Derivative 2022-09-30 09.32.12.excalidraw.svg|200]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Derivative #Uni ","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/DevEnv":{"title":"DevEnv","content":"\n# Dev Env:\n## stappen om hub.zorgverkeer.nl te starten:\n### Docker:\nOpen Docker Desktop en start `Zorgverkeer-redis-development` en `Zorgverkeer-mysql-development`\n\n### Processor / back-end\nGa naar de dir van Zorgverkeer in WSL: \n```bash\nzv\n``` \nGa naar de processor directory:\n```bash\ncd hub.zorgverkeer.nl/processor\n``` \nStart de processor:\n```bash\n./run.sh --http-server\n```\n\n### React / front-end\nGa naar de React directory (in powershell):\n```bash\ncd .\\Documents\\Zorgverkeer\\hub.zorgverkeer.nl\\react-dashboard\\\n``` \nStart de front-end:\n```bash\nnpm start\n```","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Directed-Graphs":{"title":"Directed Graphs","content":"## Definition:\n\u003e[!abstract] Definition\n\u003e\n\u003eA directed graph G consists of two (finite) sets\n\u003e• V = V(G) vertices (nodes or points)\n\u003e• E = E(G) $\\subset$ E x E directed edges (arcs or edges)\n\u003e![[Pasted image 20221013104417.png]]\n\n- *trail*: distinct edges \n- *simple path*: distinct vertices closed path $v_0 = v_n$\n- *circuit*: distinct edges \n- *cycle*: distinct vertices \n- *spanning path*: contains all vertices (at least one time)\n\n## Degree:\n\u003e[!abstract] Definition\n\u003e\n\u003eoutdegree of v = number of outgoing edges\n\u003eindegree of v = number of incoming edges\n\u003eoutdeg(v), indeg(v)\n\u003e\n\u003esource indeg(v) = 0 (Start of the graph)\n\u003esink outdeg(v) = 0 (End of the graph)\n\n\n## Connectivity \n\u003e[!abstract] Definition\n\u003e\n\u003e**strongly connected**: all vertices conncected by directed walks\n\u003e**weakly connected**: all vertices connected by undirected walks\n \n ![[Pasted image 20221110100622.png]]\n\n\n## Topological sort:\n![[Pasted image 20221110101611.png]]\n","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Domain-and-range":{"title":"Domain and range","content":"## Definition\n![[Pasted image 20220922103407.png]]\n## Domain:\n![[Pasted image 20220922103450.png|400]]\n\n## Range:\n![[Pasted image 20220922103527.png|400]]\nFor xRy:\n- x is in the preimage of y\n- y is in the image of x\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Domain #Uni ","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Drawing-functions":{"title":"Drawing functions","content":"## Steps\n1. Look at the [[functions]]:\n\t- Special values, $x=0$, $y=0$ \u0026 _domain_\n\t- symmetry\n2. [[Asymptote]]s:\n\t- Vertical $x=a$\n\t- Horizontal [[asymptote#Horizontal]]\n\t- Oblique [[asymptote#Oblique]]:\n\t\t- $y=ax+b$\n\t\t- staartdelen\n3. Look at first \u0026 second [[derivative]]:\n\t- \n\n## Example:\n$$f(x)=\\frac{x^2+2x+4}{2x}$$\nFirst find the [[asymptote]]:\n$$\\frac{1}{2}x+1$$\n![[Pasted image 20221014100935.png]]\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Duivelsdriehoek":{"title":"Duivelsdriehoek","content":"\u003e[!abstract] Definition \n\u003e\n\u003eDe 'duivelsdriehoek' is een model om de relatie tussen drie meest gebruikte kwaliteitseigenschappen: kwaliteit, tijd en geld grafisch weer te geven.\n\n![[Pasted image 20221101104135.png]]\n\n","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Elementary-row-operations":{"title":"Elementary row operations","content":"## Definition:\n\u003e[!abstract] Definition\n\u003e\n\u003eTwo matrices are row equivalent if a sequence of ERO (Equivalent Row Operations) turns one into the other.\n\n\u003e[!abstract] Definition: (row)echelon form\n\u003e\n\u003e 1. Every zero row is below non-zero rows, so the zero row is on the bottom\n\u003e 2. The leading coeff of a nonzero row is to the right of the leading coeff of the row above\n\u003e 3. All terms in a column under some leading coeff are zero\n\u003e $$\\begin{pmatrix}  1 \u0026 0 \u0026 -5 \u0026 |\u00261\\\\  0 \u0026 1 \u0026 1 \u0026|\u00264\\\\ 0 \u0026 0 \u0026 0 \u0026|\u00260 \\end{pmatrix}$$\n\n\u003e[!abstract] Definition: reduced (row)echelon form\n\u003e\n\u003e4. Every leading coeff is one (1)\n\u003e5. Every leading coeff has only zero's above it\n\u003e $$\\begin{pmatrix}  1 \u0026 0 \u0026 0 \u0026 |\u00261\\\\  0 \u0026 1 \u0026 0 \u0026|\u00260\\\\ 0 \u0026 0 \u0026 1 \u0026|\u0026-1 \\end{pmatrix}$$\n\n\u003e[!abstract] Theorem: \n\u003e A linear system is consistent iff there is a pivot in the rightmost column of the bottom row is not a pivot column\n\u003e\n\n## Rules:\n\n1. Add a multiple of a row to another row\n2. Switch two rows\n3. Multiply a row by a non-zero constant\n\n## Add a multiple of a row to another row:\n$x_1+2x_2+x_{3}= 7$\n$9x_1+8x_3=6$\n\n$x_1+2x_2+x_{3}= 7$\n$-18x_2-x_3=-57$\nthis is how we do that in matrices\n$$\\begin{pmatrix}  1 \u0026 2 \u0026 1 \u0026 |\u00267\\\\  9 \u0026 0 \u0026 8 \u0026|\u00266 \\end{pmatrix} \\to R_{2}\\to R_{2}-9\\cdot R_{1} \\to \\begin{pmatrix}  1 \u0026 2 \u0026 1 \u0026|\u0026 7\\\\  0 \u0026 -18 \u0026 -1\u0026| \u0026-57 \\end{pmatrix}$$These are the same matrices. This is called an elementary row operation.\n## Switch two rows \n$x_{1}+ x_2 = 1$\n$x_{1} - x_{2}= 0$\n\n$2x_{1}+ 2x_2 = 2$\n$2x_{1} - 2x_{2}= 0$\n\n$$\\begin{pmatrix}  1 \u0026 1 \u0026 |\u00261\\\\  1 \u0026 -1 \u0026|\u00260 \\end{pmatrix} \\to_{R_{1}\\to 2R_{1}}\\to \\begin{pmatrix}  2 \u0026 2 \u0026 |\u00262\\\\  2 \u0026 -2 \u0026|\u00260 \\end{pmatrix}$$\nThese equations are the same\n\n\n## Multiply a row by a non-zero constant\n\n\n\n## Examples:\n![[Pasted image 20221101180321.png]]\n![[Pasted image 20221101184629.png]]\n![[Pasted image 20221101185750.png]]","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Enterprise-Information-Systems":{"title":"Enterprise Information Systems","content":"\n# Enterprise Information Systems\n**course:**\n## Definition\nEen informatiesysteem is een **collectie** van **technische** en **menselijke middelen**, dat voorziet in de opslag, verwerking, distributie en communicatie **van informatie** die **nodig** is voor de hele of een deel van een **organisatie**.\n\nEen EIS is geen technologie op zich, het is een overkoepelende term voor technologie die wordt gebruikt binnen een bedrijf.\n\n- EIS bieden een technologies platform waarmee [[organisatie]]s hun bedrijfsprocessen kunnen integreren.\n- Een EIS wordt vaak gebruikt in combinatie met een systeem voor klantenrelaltiebeheer en supply chain management \n\n## Doel:\nHet doel van een Enterprise Information System is het bieden van een technologisch platform aan grote organisaties, waarmee het mogelijk is om bedrijfsprocessen te integreren en te coördineren.\n- Customer Relationship Management \n- Supply Chain Management \n- Enterprise Resource Planning\n\n## Voorbeelden:\n**ERP (Enterprise Resource Planning)**\nHet begrip ERP staat voor Enterprise Resource Planning, waarmee in een computerprogramma ofwel software wordt bedoeld. Dit soort computerprogramma's worden voornamelijk binnen organisaties gebruikt ter ondersteuning van alle processen binnen het bedrijf.\n- Dit lijdt tot efficiente [[Processen]]  \n- Je kan klantenrelaltiebeheer doen, financieel, eig alles.\n- Wordt vooral gebruikt voor hele brede [[Processen]] \n\nERP software is duur:\n- Alleen de licentie is een paar miljoen \n- [[Intergratie]]/implementatie is ook duur\n\nDe trend is dat bedrijven steeds meer losse systemen kopen.\n\n**CRM (Customer Relationship Management)**\n1. Verbeterd contactbeheer\n\t- Slaat bvb contactgegevens en informatie op als hulpdesk voor klanten. \n2. Cross-team samenwerking\n3. Verhoogde productiviteit\n4. Bevoegd verkoopbeheer\n5. Nauwkeurige verkoopprognoses\n6. Betrouwbare rapportage\n7. Verbeterde verkoopstatistieken\n8. Verhoogde klanttevredenheid en klantbehoud\n9. Verhoogde marketing-ROI\n10. Verrijkte producten en diensten\n\n![[Pasted image 20221004103147.png|300]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Equipotence":{"title":"Equipotence","content":"## Definition\n![[Pasted image 20221013093810.png]]\n![[Pasted image 20221013093849.png]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Essentials-of-computer-systems":{"title":"Essentials of computing systems","content":"## Notes \u0026 Ideas\n- [[computing system]]\n- [[abstraction]]\n- [[protocols]]\n- [[operating system ]]\n- [[computer]]\n- [[computer architecture]]\n- [[computer networks]] \n## Assignments\n[Groepsopdracht](https://liacs.leidenuniv.nl/~basoldh/education/essencs22/)\n[[Groepopdracht idee]]\n## Lectures\n**Upcoming:**\nWe will learn and see how abstraction an [[protocols]] permeate [[computing system]]s.\nExamples:\n- supercomputer \n- internet of things \n- blockchains\n- molecular computing or quantum computing \n## Extras\n### Grade breakdown\nPresentation that summarises study area (20%)\n### Course Content\n- Study essentials of computer systems \n\t- operating systems \n\t- computer networks \n\t- computer architecture \n- Basic terminology \n- Role of each part \n### Grading scale\n### Tips\n### Emails \u0026 Resources\n### Deadlines\nAll times are in CEST. These deadlines are fixed and cannot be changed.\n-   Thu, 15 Sep, 23:59: Team formation\n-   Fri, 23 Sep, 23:59: Topic pick\n-   Fri, 14 Oct, 23:59: Presentation and quiz\n-   Fri, 21 Oct, 23:59: Project proposal\n-   Fri, 11 Nov, 23:59: Project milestone\n-   Fri, 02 Dec, 23:59: Project artefact and report\n-   Mon, 19 Dec, 23:59: Project improvement deadline\n\n### Feedback Dates\n-   Monday, 26 September: Topic assignment\n-   Friday, 28 October: Proposal feedback and project start\n-   Wednesday, 02 November: Project kick-off meeting\n-   Friday, 18 November: Milestone feedback\n-   Monday, 12 December: Project feedback and marks\n\n### Attendance\nWe expect you to be present during the following days in Gorleaus 4/5.\n-   Wednesday, 07 September, 09:00: Introduction and lecture\n-   Wednesday, 14 September, 09:00: Lecture\n-   Wednesday, 21 September, 09:00: Lecture\n-   Wednesday, 28 September, 09:00: Kick-off self-study\n-   Wednesday, 19 October, 09:00: Finalising project proposal\n-   Wednesday, 02 November, 09:00: Working towards project milestone\n-   Wednesday, 23 November, 09:00: Project work\n-   Wednesday, 30 November, 09:00: Finalising project\n### Classmates\n\n## Refrences:\n- [[Uni]]\n\n---\nTags: #Course #Essentials of computer systems #Uni ","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Eulerian-circuit":{"title":"Eulerian circuit","content":"\u003e [!info] Definition \n\u003e \n\u003e An Eulerian circuit is a closed path (walk) that visits each edge exactly once.\n\u003e Degree of every node should be even\n\n\u003e[!info] Definition \n\u003e\n\u003eAn Eulerian trail is a path that contains each edge exactly once.\n![[Pasted image 20221020101313.png]]","lastmodified":"2022-12-10T12:46:18.92340227Z","tags":null},"/Exponentials-and-Log":{"title":"Exponentials and Log","content":"\n# Exponentials and Log\n## Definition\n$$f(x)=a^{x},\\ a\u003e0,\\ a\\ne1$$\n$$\\begin{align} \na^{x+y} = a^{x}a^{y}\\\\\n(a^x)^y = a^{xy}\\\\\na^{x-y} = \\frac{a^x}{a^y}\\\\\n(ab)^x = a^xb^x\n\\end{align}$$\n$$\\begin{align} \na^{y}=x \\ \u003c=\u003e \\ \\log_{a}x = y\\\\\n\\log_a(xy)=\\log_a(x)+\\log_a(y)\\\\\n\\log_a\\left(\\frac{x}{y}\\right)= \\log_a(x)-\\log_a(y)\\\\\n\\log_ax^{r}= r\\log_a(x)\n\\end{align}$$\n\n\nfor $a=e = 2.718281828$ \n$$\\ln(x) = \\log_e{(x)}$$\n\n![[Exponentials and Log 2022-10-04 14.01.50.excalidraw.svg|200]]\n\n## L' Hopital rule:\nIs possible when: $\\left[\\frac{0}{0}\\right], \\left[\\frac{\\infty}{\\infty}\\right]$\n![[Pasted image 20221007095931.png]]\n![[Pasted image 20221007100530.png]]\n## [[Limits]]:\n![[Pasted image 20221007095410.png]]\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.927402535Z","tags":null},"/Externe-druk":{"title":"Externe druk","content":"\nDe externe druk op organisaties neemt toe. Factoren die exteren druk geven:\n### Flat world:\n- Consumer market “globalization” \n- Increasingly complex industrial value chains \n- Internet of Everything\n### Start-up disruptors:\n- Enterprise disruptors emerge out of the blue \n- Create enterprise strength systems in weeks \n- Scale to global presence in months\n### Digital Live:\n- “Always On” \n- From mass to micro market \n- Changing customer \u0026 staff relationships \n- 3D/4D printing, nanotech, cloud, IoT, etc.\n### Faster innovation:\n- High, technologydriven innovation rates \n- Shortened product lifecycles\n### Sustainability \u0026 Regulations:\n- Climate change \n- Scarce natural resources \n- Sustainable economic thinking \n- Increasing regulatory control \u0026 consumer distrust \n\n![[Pasted image 20221108095542.png]]\n\n","lastmodified":"2022-12-10T12:46:18.927402535Z","tags":null},"/Extremes":{"title":"Absolute extremes","content":"## Absolute Maximum / Minimum\n![[Pasted image 20221011133430.png]]\n\n## Local Maximum / Minimum\nFinding local max/min:\n- CP: **Critical point:** $f'(c) =0$\n- SP: **Singular point:** $f'(c)$ is not defined \n- EP: **End points:** end points of the domain where the [[functions]] is defined\n![[Screenshot 2022-10-11 at 13.35.35.png]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.927402535Z","tags":null},"/File-System":{"title":"File System","content":"\n# File System\n**course:**\n## Definition\nTo interact with the data on a usb stick you need a file system. A file system does a few things:\n- folders \n- files \n- Corrections: if something goes wrong(power outage) it can stop the write and cancel it\n- access rights\nThe file system is a bridge between the data and the [[operating system]]. With the file system you can read the data.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #File System #Uni ","lastmodified":"2022-12-10T12:46:18.927402535Z","tags":null},"/Foundations-of-Computer-Science":{"title":"Foundations of Computer Science","content":"\n## Notes \u0026 Ideas\n- [[set]]\n- [[pairs]]\n- [[powerset set]]\n- [[partition set]]\n- [[Venn diagrams]]\n- [[relation]]\n- [[Set algebra]]\n- [[Counting sets]]\n- [[Visualizing relationships and compositions]]\n- [[Types of relations]]\n- [[set operations]]\n- [[Closure]]\n- [[functions (discr)]]\n- [[Graph Theory]]\n- [[Summary FoCS]]\n- [[Terminology FoCS]]\n- [[Recursion]]\n- [[Induction]]\n- [[Directed Graphs]]\n- [[Counting]]\n\n[Playlist 1](https://www.youtube.com/watch?v=OixshZzH8t0\u0026list=PLDDGPdw7e6Ag1EIznZ-m-qXu4XX3A0cIz\u0026index=53)\n[Playlist 2](https://www.youtube.com/watch?v=HkNdNpKUByM\u0026list=PLDDGPdw7e6Aj0amDsYInT_8p6xTSTGEi2\u0026index=23\u0026t=1s)\n\n## Voorbeelden \n[Oefen opgaven](http://liacs.leidenuniv.nl/~hoogeboom/focs/archief.html)\n\n## Lectures\n## Leerstof\n| Week number\u0026nbsp; | Date  | Topic                                 | Book chapters          |\n|-------------------|-------|---------------------------------------|------------------------|\n| 1 (36)            | 08.09 | Introduction, Set theory I            | 1.1 to 1.4             |\n| 2 (37)            | 15.09 | Set theory II                         | 1.5 to 1.6         |\n| 3 (38)            | 22.09 | Set theory III, Relations I           | 1.7, 2.1 to 2.4        |\n| 4 (39)\u0026nbsp;      | 29.09 | Relations II                          | 2.5 to 2.7             |\n| 5 (40)            | 06.10 | Relations III, Functions I            | 2.7 to 2.9, 3.1 to 3.3 |\n| 6 (41)            | 13.10 | Functions II, Graphs                  | 3.5, 8.2 to 8.4, 8.6   |\n| 7 (42)\u0026nbsp;      | 20.10 | Undirected graphs                     | 8.3 to 8.7             |\n| - (43)            | 27.10 | Midterm\u0026nbsp;                         |\n| 8 (44)\u0026nbsp;      | 03.11 | Recursion and induction               | 1.8, 3.6, 11.3         |\n| 9 (45)\u0026nbsp;      | 10.11 | Structural induction, Directed graphs | 9.2, 9.3, 9.9          |\n| 10 (46)           | 17.11 | Combinatorics, Tree graphs            | 5, 8.8                 |\n| 11 (47)           | 24.11 | Rooted trees, Binary trees            | 9.4, 10                |\n| 12 (48)           | 01.12 | Countability, Modulo arithmetic       | 3.7, 11.8              |\n| 13 (49)           | 08.12 | Formal languages, Finite automata     | 12.2 to 12.5           |\n\n### Checklist:\n#### Set Theory:\n- [x] Sets and Elements, Subsets\n- [x] Venn Diagrams \n- [ ] Set Operations \n- [ ] Algebra of Sets, Duality \n- [ ] Finite Sets, Counting Principle \n- [ ] Classes of Sets, Power Sets, Partitions \n\n#### Relations:\n- [ ] Product Sets \n- [ ] Relations \n- [ ] Pictorial Representatives of Relations \n- [ ] Composition of Relations \n- [ ] Types of Relations \n- [ ] Closure Properties \n- [ ] Equivalence Relations \n- [ ] Partial Ordering Relations\n\n#### Functions: \n- [ ] Functions \n- [ ] One-to-One, Onto, and Invertible [[functions]]\n- [ ] Sequences, Indexed Classes of Sets\n\n#### Graphs:\n- [ ] Graphs and Multigraphs \n- [ ] Subgraphs, Isomorphic and Homeomorphic Graphs \n- [ ] Paths, Connectivity \n- [ ] Traversable and Eulerian Graphs, Bridges of Königsberg \n- [ ] Labeled and Weighted Graphs \n- [ ] Complete, Regular, and Bipartite Graphs\n\n## Planning woensdag:\n- [ ] 10 - 11: settelen en laatste stukje graphs lezen\n- [ ] 11 - 20 oefenen \n- [ ] 25 min oefenen, 5 min pauze \n- [ ] elke 1.5 uur 30 min pauze.\n\n### Grade breakdown\n**Midterm:** 27 oct\n- 3 hours \n- 50% of finale grade \n- 1ste deel\n\n**Final exam:** 13 jan \n- 3 hours \n- 50% of finale grade\n- 2de deel, eerste deel kan je weer vergeten :)\n\n**Retake:** march 2022\n- 3 hours \n- 100% of finale grade\n### Grading scale\n### Tips\n### Emails \u0026 Resources\n### Important dates\n- 27 October: Exam part 1\n- 13 January: Exam part 2\n### Classmates\n\n## Refrences:\n- [[Uni]]\n\n---\nTags: #Course #Foundations_of_Computer_Science #Uni ","lastmodified":"2022-12-10T12:46:18.927402535Z","tags":null},"/Graph-Theory":{"title":"Graph Theory","content":"- [[Directed Graphs]]\n- [[Undirected  Graphs]]\n- [[Handshaking lemma]]\n- [[Subgraphs]]\n- [[Removing vert and edges]]\n- [[Paths]]\n- [[Graph centrality]]\n- [[Eulerian circuit]]\n- [[Isomorphic graphs]]\n- [[Special graphs]]\n\nGraphs consist of nodes and edges. Edges are the connections between nodes. Undirected graphs dont have a direction, directed graphs do. A graph is basically a special type of [[relation]]. \n\nGraphs in this course are always **finite**. Many results about graphs only apply to the finite case. We look at both **undirected** **graphs** and **directed graphs**. \n\nThe definition directly implies that it is about undirected graphs: edges have no special direction (unordered pairs, sets). It also follows from the definition that a graph does not have multiple edges (E is a set) and also no loops (edges are sets).\n\n![[Pasted image 20221013104149.png]]\n\n## Basic concepts:\n![[Pasted image 20221013104801.png]]\n## Adjacency matrix:\n![[Pasted image 20221020090718.png]]\n\n## Euler vs. Hamilton\n![[Pasted image 20221020102951.png]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.927402535Z","tags":null},"/Graph-centrality":{"title":"","content":"In “social network analysis” one tries to define values that indicate how central nodes are in a graph, a measure of importance. \n\nThis can be, for example, a measure that indicates \n(a) how many paths run through that node, \n(b) what is the total/average distance to the other nodes, \n(c) the degree of the node \nThe warm colours in the pictures are more central than the cold according to the concerning measure.\n![[Pasted image 20221020100343.png]]","lastmodified":"2022-12-10T12:46:18.927402535Z","tags":null},"/Graph-of-func":{"title":"Graph of func","content":"\n# Graph of func\n## Definition\n![[Screenshot 2022-10-06 at 09.48.12.png]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.927402535Z","tags":null},"/Graphing-functions":{"title":"Graphing functions","content":"\n# Graphing functions\n**course:**\n## Example:\n![[Graphing functions 2022-09-27 13.49.57.excalidraw]]\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Graphing functions #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Groepopdracht-idee":{"title":"Groepopdracht idee","content":"We gaan een clone maken van Gmail, inclusief https client. 3 mensen gaan dit schrijven en 7 mensen gaan uitwerken hoe gmail precies werkt en geimplementeerd is. Hieronder staan de onderwerpjes die we hebben bedacht, inclusief vragen. Je moet in gedachten houden dat het allemaal gekoppeld moet worden aan Gmail en hoe dat werkt. \n\n## Implementiation:\n*3 mensen: Elliot, Emma, Manuel*\n- Email servers\n- Https server \n- Https client\n- interaction between\n- Hoe we het gedaan hebben(uitwerking)\n\n## Paper on gmail clone:\n*7 mensen totaal*\nEen paper schrijven op hoe je een service als gmail of yahoo mail zou opzetten, inclusief SSL, DNS, HTTPs, Datacenter, Storage enz. \n\n### Application Layer (2.1) \n*2 mensen* (Talha, Selina)\n- You know what the role of the application layer is and what its key concepts are: client-server vs. P2P, process communication via messages, API and sockets, IP addresses and ports, the basic idea of TCP (see lecture).\n\n### Web \u0026 HTTP (2.2)\n*2 mensen* (Aran, Sanne)\n- You know what HTTP is and what messages it uses.\n- You know how HTTP works with persistent and non-persistent connections.\n- You know what HTTP cookies and web caching are.\n- SSL encription \n- You know what HTTPs is and what messages it uses. \n\n### E-mail \u0026 DNS (2.3–2.4)\n*3 mensen* (Romy, Hylke, Marike)\n- You know how the internet e-mail system is structured, and what role SMTP plays and how it works.\n- You know the RFC5322 mail message format (only from, to and subject) and the two common mail access protocols (HTTP, IMAP).\n- You know what service DNS provides and how it works.\n- You know what DNS records and DNS message format are.\n- You know what service DNS Secure provides and how it works. ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Hamiltonian-cycle":{"title":"Hamiltonian cycle","content":"\u003e [!info] Definition \n\u003e\n\u003eA Hamiltonian cycle (circuit) is a closed path (walk) that contains each vertex except the end points exactly once.\n\n\u003e [!info] Definition \n\u003e\n\u003eA Hamiltonian path is a path that contains each vertex exactly once.\n\n\n![[Pasted image 20221020102139.png]]\n\n**Hamiltonian graph** contains a Hamiltonian cycle.","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Handshaking-lemma":{"title":"Handshaking lemma","content":"The sum of the degrees in a graph is 2 times the edges\n![[Pasted image 20221013104945.png]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/I-en-E-Introductie":{"title":"I \u0026 E Introductie","content":"\n## Notes \u0026 Ideas\n- [[Intergratie]]\n- [[Processen]]\n- [[Data]]\n- [[Reporting]]\n- [[Enterprise Information Systems]]\n- [[Rol van ICT]]\n- Modelen:\n\t- [[Porters competative advantage]]\n\t- [[Waardeketen]]\n\t- [[Vijfkrachtenmodel]]\n\t- [[SWOT]]\n\t- [[DESTEP]]\n\t- [[Treacy en Wiersema]]\n\t- [[Stadia Groepsvorming]]\n\t- [[DIKW piramide]]\n\t- [[Management piramide]]\n\t- [[SMART]]\n\t- [[Strategic Alignment Model]]\n\t- [[Duivelsdriehoek]]\n- [[Organisatie]]\n- [[Management]]\n- [[Project Management]]\n- [[Externe druk]]\n- [[Interne druk]]\n- [[Industriele revoluties]]\n- [[Chatbots]]\n- [[Business Intelligence]]\n- [[Low Code]]\n- [[DMP]]\n- [[CDP]]\n- [[IoT]]\n- [[RPA]]\n- [[Samenvatting_IE]]\n## Assignments\n- Brightspace test maken\n## Lectures\n## Extras\n**Afspraken:**\n- Optijd komen\n- Altijd aanwezig zijn, anders melden, je hoeft dan geen rede te melden\n- Goede voorbereiding en doe gewoon mee.\n\n**Opdracht:**\n- krijgen een technologie en beschrijven die uit verschillende invalshoeken, staat op brightspace\n- 7 – 8 slides \n### Grade breakdown\n55% tentamen:\n- openvragen\n- gesloten boek\n- tentamen is 13 december 2022\n- tentamen moet een \u003e= 5.5 zijn, ongeacht opdracht\n45% opdracht:\n- Deadline voor rapport en presentatie 7 nov\n- presentaties: 15 nov / 22 nov\n- rapport 60%\n- presentatie: 40%\n### Grading scale\n### Tips \n- Tentamen is ong 4 vragen\n- Vraag 1 definitie \n- vraag 2 ?\n- vraag 3 toepassing\n- Vergeet second party data\n- waarschijnlijk komt er dit in het tentamen:\n\t- proces samenstellen van Nike fzo\n\t- Geen gesloten vragen, geen multiple choice\n\t- Geef een voorbeeld van 3 KPIs op strategisch niveau bij de albert heijn\n\t- Weet waar systemen die uit de opdracht komen over gaan\n\t- Leg uit wat wordt bedoeld met integratie van Business en IT:\n\t\t- Business en IT waren vroeger 2 verschillende dingen, deze worden nu samen gevoegd tot 1.\n\t- Leg uit wat het belang is van het integreren van IT en Business in [[organisatie]]s. \n\t\t- Het belang is dat binnen een [[organisatie]] IT en Business samen kunnen werken om processes efficient en effectief kunnen zijn.\n\t- Toelichting is heel belangrijk.\n\t- Wat heeft Silicon Valley met business te maken.\n\t- Strategie vraag over supermarkten\n\t- wat is geen digitalisering wordt geen vraag\n\t- Wat is improviserent werken, voorbeeld geven:\n\t\t- Een extreme zoeken.\n\t\t- Corona: de eerste week waar niemand wist wat ie moest doen\n- Licht elk antwoord toe. \n- Bestudeer oefenententamens goed. \n- Bekijk referentie en naslagwerk\n- Schrijf duidelijk\n- Revoluties hoef je niet te kennen. \n- Rapport:\n\t- Definitie \n\t- Alle subonderwerpen: Data, IT, business.\n\t- Toepassing simpel: Voordelen/Nadelen.\n\n#### 1ste en 2de college:\n- Ken alle modelen. \n\t- Er worden geen voorbeelden gegeven, je moet bvb zelf weten welke 5 krachten het zijn bij 5 forces.\n- Ken theorie van groepsvorming. \n#### 3de college:\n- Als je een proces model krijgt weet je hoe je die optimalizeert\n- Als je er 1 moet je vooral op hetzelfde niveau zitten. Denk bestel pizza en stop in winkelmandje. Winkelmandje is een subproces van pizza bestellen \u003e dus niet zelfde niveau. \n#### 4de college:\n- Als je data moet opschrijven, gewoon bullshit opschrijven: 12.4234.234.23, Je moet het antwoord niet toe te lichten \n#### 5de college:\n- De directe toepassing van IT toepassing op business \n- [[Project Management]] \n- \n#### \n### Emails \u0026 Resources\n### Important dates\n- Presentaties: 15 nov / 22 nov\n- Tentamen is 13 december 2022\n### Classmates\n\n## Refrences:\n- [[Uni]]\n\n---\nTags: #Course #IEIntroductie #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/IO":{"title":"IO","content":"\n# IO\n**course:**\n## Definition\nIO: input / output is used to interact with the outside world as a [[computer]]. Printers or a mouse are some of there interfaces. You want the printer to give your [[operating system]] instructions on how to use it. The program that does that is called a [[driver]]. Different [[protocols]] are used for interacting with the io from the [[driver]]s \n\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #IO #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Identity-relation":{"title":"Identity relation","content":"\n# Identity relation\n**course:**\n## Definition\n![[Pasted image 20220922102011.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Identity relation #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Induction":{"title":"","content":"\u003e[!abstract] Definition \n\u003e\n\u003eProof that something holds forever.\n\u003e– a recursive technique strategy for solving large problems\n\u003e– Based on the computational thinking strategy: “divide and conquer”\n\u003e– Idea: Solve large problem by splitting into smaller problems of same kind\n\nAn inductive proof is a method to prove a property of objects that are inductively defined. Also called mathematical induction when it comes to ℕ.\n\nCoinductive definition = recursively defined objects in which larger objects are decomposed into smaller one.\n\nA coinductive proof is a method to prove a property of objects that are coinductively defined.\n\n## Example:\n![[Pasted image 20221103093303.png]]\n","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Industriele-revoluties":{"title":"Industriele revolutie","content":"![[Pasted image 20221108104048.png]]\n\n## Gietijzer en stoomamachines rond 1750\nDe industriële revolutie begon rond 1750 in Engeland. Ze vervolgde begin 19de eeuw in de rest van Europa. Ambachtelijke en kleinschalige werkplaatsen groeiden uit tot grote fabrieken en vormden samen een grootschalige industrie \n\n## Staal, elektriciteit, turbines en verbrandingsmotor\nTweede industriële revolutie, ook wel bekend als de technologische revolutie, was een periode van de algehele Industriële revolutie, die liep van de tweede helft van de 19e eeuw tot de Eerste Wereldoorlog. Het is volgens sommigen wetenschappers begonnen met de ontwikkeling van het Bessemerprocedé in de jaren 1860 en culmineerde in de opkomst van massaproductie en de productielijn.\n\n## Computer, communicatie en globalisatie.\nDoor de uitvinding van een aantal nieuwe communicatievormen vanaf het eind van de 19e eeuw, en vanaf de jaren vijftig, de computer, werd het mogelijk om informatie bijna overal ter wereld te raadplegen. Mede hierdoor werd het voor bedrijven mogelijk te globaliseren: coördinatie van productie en levering kon vanaf dan zeer efficiënt en wereldwijd plaatsvinden waardoor grote schaalvoordelen mogelijk werden.\n\n## Cyber-physical technologie\n![[Pasted image 20221108104027.png]]\n\n","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Intergratie":{"title":"Intergratie","content":"\n# Intergratie\n**course:**\n## Definition\nHoe kunnen bedrijven IT en nieuwe techniek toepassen en gebruiken.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Intergratie #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Interne-druk":{"title":"Interne druk","content":"\nOok intern staat het CxO team erg onder druk.\n\n### *","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Inverse-relation":{"title":"Inverse relation","content":"\n# Inverse relation\n**course:**\n## Definition\n![[Pasted image 20220922102918.png]]\n![[Pasted image 20220922103056.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Inverse relation #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/IoT":{"title":"IoT","content":"\n\u003e[!abstract] Definition\n\u003e\n\u003eInternet of Things is een systeem van onderling verbonden objecten die data kunnen uitwisselen zonder hulp van de mens. \n\n- Wat valt er onder IoT:\n\t- Het gaat van een connected apparaat naar een connected apparaat. ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Isomorphic-graphs":{"title":"Isomorphic graphs","content":"\u003e[!info] Definition\n\u003e\n\u003eA graph that has de same edges an vertices. They can differ in names of vertices. The vertices need to have the same number of edges connected to them\n\u003e![[Pasted image 20221020103150.png]]\n\n","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/KPI":{"title":"KPI","content":"\n# KPI\n**course:**\n## Definition\n- Variable om prestaties van ondernemingen te analyseren.\n- Meetmethoden die mangementdoelstellingen kwantificeren.\n- Dingen als Average Weekday Boardings.\n- Eventueel dashboard om deze informatie te laten zien:\n![[Pasted image 20220927101720.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #KPI #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Learing-and-study-strategies":{"title":"Learing and study strategies","content":"\n# Learing and study strategies\n**course:**\n## Definition\n1. Spaced repetition:\n\t- Herhaal een onderwerp meerdere keren met tijd ertussen \n\t- Zorgt dat info sneller in je hoofd komt \n\t- beter 8 dag 1 uur 1 dag 8 uur \n2. Interleaving\n\t- Verschillende onderwerpen afwisselen \n\t- Planning \n\t\t- Time management, make optimal use of your time.\n\t\t- Create overview of your tasks \n\t\t- Priorities \n\t\t- Estimate and keep track \n3. Active recall \n\t- Actively engaging with the material \n\t- Highliting and notetaking\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Learing and study strategies #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Limits":{"title":"Limits","content":"\n# Limits\n**course:**\n## Definition \n$$\\lim_{x\\to c}f(x)=L \\text{ if for every N \u003e 0 there exists B \u003e 0 such that for all points } x \\cdot |x-c|\u003cB, \\text{ one has } |f(x)-L|\u003cN$$ \n### Example:\nprove $\\lim_{x\\to 2}x=2$, $f(x)=x$\nsuppose $N \u003e 0$ Let $B = N$\nif $x$ is such that $|x-2|\u003cB=N$\nThen $|f(x)-f(2)|=|x-2|\u003cN$\n\n![[Limits 2022-09-27 14.09.53.excalidraw]]\n\n![[Limits 2022-09-27 14.13.35.excalidraw]]\n## Use of limits\n1. $$\\lim_{x \\to \\infty} \\frac{1}{x^\\infty } = 0$$\n2. $$\\lim_{x \\to \\infty} a^{-x}= 0$$\n3. $$\\lim_{x \\to \\infty} a^{x}= 0 \\text{ when a \u003c 1}$$\n- [[asymptote]]\n## Normal limits\n$$\\lim_{x\\to a} f(x)=l$$\n$f(x)$ is close to $l$ as $x$ approaches $a$. You can approach from the right and from the left.\nRight:\n$$\\lim_{x\\to a+} f(x)=l$$\nLeft:\n$$\\lim_{x\\to a-} f(x)=l$$\n**Rule 1:**\nif P is a polynomial \n$$\\lim_{x\\to a} P(x)=P(a)$$\n**Rule 2:**\nP, Q as polynomials, $Q(a)!=0$\n$$\\lim_{x\\to a} \\frac{P(x)}{Q(x)}=\\frac{P(a)}{Q(a)}$$\n\n**Rule 3**\nf(x), g(x), h(x) defined around an interval.\nsuppose $f(x)\\leq h(x) \\leq g(x)$\n$$\\lim_{x\\to a} f(x)=l=\\lim_{x\\to a} g(x)$$\nthen $$\\lim_{x\\to a} h(x)=l$$\n**Example:**\n![[Pasted image 20220920133625.png]]\n\n## Limits to infinity \n**Example:**[[asymptote]]\n![[Pasted image 20220920134751.png]]\n![[Pasted image 20220920134744.png]]\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Limits #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Linear-Algebra-for-Computer-Sciences":{"title":"","content":"The goal of the course is to understand linear systems.\n## Notes \u0026 Ideas\n- [[Linear equation]]\n- [[Matrices]]\n- [[Elementary row operations]]\n- [[Vectors]]\n- [[Span]]\n- [[functions linear]]\n- [[Transforms]]\n- [[Bijective]]\n\n## Assignments\n## Lectures\n## Extras\n### Grade breakdown\n**Homework**: 20% \n**Quizes**: 5% \n**Exam**: 75%\n### Grading scale\n### Tips\n### Emails \u0026 Resources\n### Important dates\n### Classmates\n\n## Refrences:\n- [[Uni]]\n\n---\nTags: #Course #Linear Algebra for Computer Sciences #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Linear-equation":{"title":"Linear equation","content":"## Definition:\n$ax_{1} + ax_{2} + ax_{3} + ax_{4} + ax_{5} + ax_{6} = b$\nWhere $a$ is the **coefficient**\nand $x$ the **variable**\nand $b$ is the **constant**\n\n$x^2$ is not linear because of the $^2$\n\n## Systems\nA system of linear equations is:\n$x_{1}+ x_{2}=1$\n$x_1-x_{2}= 0$\nThis is $\\frac{1}{2}$ \n\nIf there is no solution, a system is called **inconsistent**\nIf there are solutions, a system is called **consistent**\n\n\u003e[!abstract] Definition\n\u003e\n\u003etwo linear systems are equivalent if they have the same solution sets.","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Link-layer":{"title":"Link layer","content":"\n# Link layer\n**course:**\n## Definition\nIndividual links between nodes and switches.\n**Frame**\nYou take the data you want to send and you add the header to it. \n\n**Link Access**\nIs managed by [[protocols]] \n\n**Problems**\nYou also need to solve a few problems. Error Detection is used to detect if there has been an error. Mostly used in wireless networks. Suppose a error happens. You want to correct it before it get's shot up to the internet. \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Link layer #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Low-Code":{"title":"","content":"\u003e[!abstract] Definition\n\u003e\n\u003eLow Code is een vorm van software ontwikkeling die is gericht op het visueel ontwerpen van applicaties. FORTRAN en COBOL zijn geen lowcode\n\n- Low Code vs No code:\n\t- No code is geen code, low code is minimaal.\n- Nadelen:\n\t- Blijkt in de praktijk best complex.","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Management":{"title":"Management","content":"The function that coordinates the efforts of people to accomplish goals and objectives using available resources efficiently and effectively.\n- Het formuleren en bereiken van de doelstellingen van een organisatie, binnen een gegeven context. \n- Bij het behalen van deze doelstellingen staat een effectieve en efficiënte manier van werken voorop. \n- Dit geldt in het bijzonder voor het inzetten en verdelen van de beschikbare resources (tijd, geld, mankracht, etc.)\n\n## Hoofdfuncties:\n1. Forecasting \n\t- Vooruitkijken en voorspellen om in te spelen op situaties.\n2. Planning \n\t- Een plan van aanpak maken\n3. Organizing\n\t- Hoe gaan we ons plan uitvoeren \n4. Commanding\n\t- Aansturen op het moment zelf. Dingen in de gaten houden en mensen instructies geven.\n5. Coördinating\n\t- Dingen in de gaten houden.\n6. Controlling\n\t- Is het geen dat moet worden gedaan daadwerkelijk gedaan.\n\n## Bekende management methodes (Niet leren):\nHandig, kan je cursussen in volgen.\n- Lean Management \n- Total Quality Management \n- Six Sigma \n- Competentiemanagement\n","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Management-piramide":{"title":"Management piramide","content":"\n# Management piramide\n**course:**\n## Definition\n![[Three-Levels-of-Strategy-Pyramid.webp|500]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Management piramide #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Mannomels":{"title":"Mannomels","content":"\n# Mannomels\n**course:**\n## Definition\nA part of a function: $x^2$ in $x^{2}+ 3$\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Mannomels #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Matrices":{"title":"Matrices","content":"## Notation:\n$x_1+2x_2+x_{3}= 7$\n$9x_1+8x_3=6$\n\n$x_1+2x_2+x_{3}= 7$\n$-18x_2-x_3=-57$\nthis is how we do that in matrices\n**Coefficient matrix:** (2×3 matrix)\n$$\\begin{pmatrix}  \n1 \u0026 2 \u0026 1\\\\  \n9 \u0026 0 \u0026 8  \n\\end{pmatrix}$$\n**Augmented Coefficient matrix:** (2×4 matrix)\n$$\\begin{pmatrix}  1 \u0026 2 \u0026 1 \u0026 |7\\\\  9 \u0026 0 \u0026 8 \u0026|6 \\end{pmatrix} \\to R_{2}\\to R_{2}-9\\cdot R_{1} \\to \\begin{pmatrix}  1 \u0026 2 \u0026 1 \u0026 7\\\\  0 \u0026 -18 \u0026 -1 \u0026-57 \\end{pmatrix}$$\n\n\nThese are the same matrices. This is called an elementary row operation.\n\n## Matrix Equations:\n\u003e[!abstract] Definition\n\u003e\n\u003eMultiplication of a vector $\\vec{V}$ and matrix M with $n$ columns is def:\n\u003e$$M \\cdot \\vec{V} = V_{1} \\cdot M_{1} + V_{2} \\cdot M_{2}$$\n\n$$\\begin{align*}\n  A \\vec{x} \u0026= \\left[\n    \\begin{array}{rrr}\n      1 \u0026 -1 \u0026 2\\\\\n      0  \u0026 -3 \u0026 1\n    \\end{array}\n  \\right]\n  \\left[\n    \\begin{array}{l}\n      2\\\\1\\\\0\n    \\end{array}\n  \\right]\\\\\n  \u0026=\n  \\left[\n    \\begin{array}{r}\n      2 \\cdot 1 - 1\\cdot 1 + 0 \\cdot 2\\\\\n      2 \\cdot 0 - 1 \\cdot 3 +0 \\cdot 1\n    \\end{array}\n  \\right]\n  \\\\\n  \u0026=\n  \\left[\n    \\begin{array}{r}\n      1\\\\\n      -3\n    \\end{array}\n  \\right].\n\\end{align*}$$\n\n\n","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Matrix-multiplication":{"title":"Matrix multiplication","content":"\n# Matrix multiplication\n**course:**\n## Definition\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Matrix multiplication #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Mean-Value-Theorem":{"title":"Mean Value Theorem","content":"\n# Mean Value Theorem\n## Definition \n1. Take a continuous [[functions]] between $[a, b]$\n2. let $f$ be differentable on (a,b) then there exists a C (a,b) such that:\n$$f'(c)=\\frac{f(b)-f(a)}{b-a}$$\n$$f(b)=f(a)+f'(c)(b-a)$$\n![[Mean Value Theorem 2022-10-04 13.42.45.excalidraw.svg|200]]\n\n\n## Example \n![[Pasted image 20221004135556.png]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Micro-architecture":{"title":"Micro-architecture","content":"\n# Micro-architecture\n**course:**\n## Definition\nGeneral pipeline:\nReading from [[memory]] -\u003e Decoding -\u003e Execute with ALU -\u003e write back to [[memory]] \n\nYou can improve the speed by beginning to read from [[memory]] again while we're decoding.\n![[Pasted image 20220921104222.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Micro-architecture #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Microcontroller":{"title":"Microcontroller","content":"\n# Microcontroller\n**course:**\n## Definition\nA small processor that you can often program once. It's very power efficient \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Microcontroller #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Multi-threading":{"title":"Multi-threading","content":"\n# Multi-threading\n**course:**\n## Definition\nMulti-threading is used by a processes to do multiple things at the same time. \n\n**Difficulties with multi-threading**\n- [[Race conditions]]\n- [[deadlocking]]\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Multi-threading #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Network-layer":{"title":"Network layer","content":"\n# Network layer\n**course:**\n## Definition\nHow to get from the first [[computer]] to the last [[computer]] in a communication.\n\n**Routing:**\nYou have a packet you want to send from one place to another. You bring it to your ISP and they decide how that is done.\nFirst they have a whole networks of switches. The packet is dropped of by the closed switch. The switch inspects the header. The header indicates what the switch needs to do. The ISP will than look at it's network of switches and decide what route they want to use for this packet.  You have different algorithms that decide what route is the \"best\". This can be the fastest or cheapest \n\n**Forwarding:**\nForwarding is a local decision to forward messages and is decided by the routing.  \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Network layer #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Palinomial":{"title":"Palinomial","content":"\n# Palinomial\n**course:**\n[Boek](file:///C:/Users/Maant/Downloads/Calculus%20A%20Complete%20Course%20(Seventh%20Edition)%20(Robert%20Alexander%20Adams,%20Christopher%20Essex)%20(z-lib.org).pdf)\n## Reference:\n[[Palinomial-division]]\n## Definition, book P6\nA function with multiple [[Mannomels]]\n- $P(x) = x^{2}+ 2$ Deg = 2 want $x^2$\n- $P(N) != 0$\n- $x^2$ in function  $x^2+2$ is a [[Mannomels]]\n\n**Change palinomials:**\n- Add $2x + 3$   +  $2x$ == $4x + 3$\n- Multiply: $(x+2)(x-4)$\n- 2 palinomials = 1 palinomial\n\n**Rule 1** $p(x)=Q_{1} Q_2$\n- Finding $Q_{1} and Q_2$ is hard\n- If $p(r)=0$ and r = a root of func p, there exists a palinomial $Q(x)$ such that $P(x) = (x-r)Q(x)$\n\t- Deg(P) = n, Deg(Q) = n-1 \n\t- $x^{2}- a^{2}= (x-a)(x+a)$\n\t- $x^{3}- a^{3}= (x-a)(x^2+ax+a^2)$\n\t- $x^{4}- a^{4}= (x-a)(x^3+ax^2+a^2x+a^3)$\n- There are Palinomials for deg 1, deg 2, deg 3, and deg 4. More degrees don't exist\n\n**Rule 2:**\n- With this you can devide \n- Any palinomial $p(x)$ can be factorized([[factorization]])\n- suppose $p(x) = 5x^{2}- 5$ is integer\n- and r = root\n- if can 5 devide r = root\n- 5 / 1 or 5 / -1\n\n**Rule 3:**\nF(x) is divisible by P(x) if there is Q(x) such that F(x)=P(x) * Q(x)\nExample: $x-1$ devides $x^2 - 1$\n$x^2-1=(x-1)(x+1)$\nWhen is F(x) divisible by P(x) $\\frac{F(x)}{P(x)}$\n1. **If deg(P) \u003e Deg(F)** then NO, It can not be divided\n\tSmaller number never devides into int by larger number: $5 / 10 = 0.5$\n2. **If r is a root of F ($F(r)=0$)**\n\tThen $P(x)=(x-r)$ divides F\n\tSuch that $F(x)=(x-r)^n \\cdot Q(x)$+\n\tN = multiplicity\n\t-\u003eIs it possible that $(x-r)$ divides F? \n\t\tthe [[multiplicity]]  is n in $(x-r)^n$ when you cant devide anymore by $(x-r)^n$\n\t\tExample: \n\t\t$x^{2}=(x-0)^2$, muliplicity is 2\n3. **Long division:**\n\t17 / 493 \\\\ 29\n\t x2  34       -\n\t -------------\n\t      153\n\t x9 153\n\n\t$\\frac{p(x)}{q(x)}=r(x)$\n\tr is a rational function\n\tdefined for all x s.t $q(x) \\neq 0$\n\tFor functions:\n\t![[Pasted image 20220906140651.png]]\n**Rational functions rules:**\n$$\\frac{p_1(x)}{q_{1(x)}}+\\frac{p_2(x)}{q_{2(x)}} = \\frac{p_1(x)q_2(x)+p_2(x)q_1(x)}{q_1(x)q_2(x)}$$\n$$\\frac{p_1(x)}{q_{1(x)}} \\cdot \\frac{p_2(x)}{q_{2(x)}} = \\frac{p_1(x)p_2(x)}{q_1(x)q_2(x)}$$\n\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Palinomial #Uni ","lastmodified":"2022-12-10T12:46:18.935403065Z","tags":null},"/Palinomial-division":{"title":"Palinomial-division","content":"\n# Palinomial\n**course:**\n[Boek](file:///C:/Users/Maant/Downloads/Calculus%20A%20Complete%20Course%20(Seventh%20Edition)%20(Robert%20Alexander%20Adams,%20Christopher%20Essex)%20(z-lib.org).pdf)\n## Definition, book P6\nF(x) is divisible by P(x) if there is Q(x) such that F(x)=P(x) * Q(x)\nExample: $x-1$ devides $x^2 - 1$\n$x^2-1=(x-1)(x+1)$\nWhen is F(x) divisible by P(x) $\\frac{F(x)}{P(x)}$\n1. **If deg(P) \u003e Deg(F)** then NO, It can not be divided\n\tSmaller number never devides into int by larger number: $5 / 10 = 0.5$\n2. **If r is a root of F ($F(r)=0$)**\n\tThen $P(x)=(x-r)$ divides F\n\tSuch that $F(x)=(x-r)^n \\cdot Q(x)$+\n\tN = multiplicity\n\t-\u003eIs it possible that $(x-r)$ divides F? \n\t\tthe [[multiplicity]]  is n in $(x-r)^n$ when you cant devide anymore by $(x-r)^n$\n\t\tExample: \n\t\t$x^{2}=(x-0)^2$, muliplicity is 2\n3. **Long division:**\n\t17 / 493 \\\\ 29\n\t x2  34       -\n\t -------------\n\t      153\n\t x9 153\n\n\t$\\frac{p(x)}{q(x)}=r(x)$\n\tr is a rational function\n\tdefined for all x s.t $q(x) \\neq 0$\n\tFor functions:\n\t![[Pasted image 20220906140651.png]]\n**Rational palinomials rules:**\n$$\\frac{p_1(x)}{q_{1(x)}}+\\frac{p_2(x)}{q_{2(x)}} = \\frac{p_1(x)q_2(x)+p_2(x)q_1(x)}{q_1(x)q_2(x)}$$\n$$\\frac{p_1(x)}{q_{1(x)}} \\cdot \\frac{p_2(x)}{q_{2(x)}} = \\frac{p_1(x)p_2(x)}{q_1(x)q_2(x)}$$\n## Backlinks\n[[Palinomial]]\n## Refrences:\n\n---\nTags: #Concept #Palinomial #Uni ","lastmodified":"2022-12-10T12:46:18.9314028Z","tags":null},"/Paths":{"title":"Paths","content":"Walking along a path in a graph. The length of the path is the number of vertices visited.\n![[Pasted image 20221020091813.png]]\n**Trail:** a path where you only visit edges once.\n**Simple path:** a path where you only visit distinct vertices.\n\n## Types of paths:\n*Closed path*: $V_{0}=V_{n}$ it's just a loop \n*Circuit*: Closed path where you only visit edges once(closed trail) \n*Cycle*: Closed path with distinct vertices\n![[Pasted image 20221020092200.png]]\n\u003e [!INFO] Definition \n\u003e \n\u003e Suppose u, v ∈ V(G) and there is a path from u to v in which vertex x occurs twice: xi = xj = x. Then we can omit the intermediate vertices (and corresponding edges).\n\u003e ![[Pasted image 20221020094205.png]]\n\n## Distance:\n\u003e [!INFO] Definition \n\u003e \n\u003e The **distance** between two nodes **u** and **v** is the length (nr. of edges) of a shortest path between **u** and **v**.\n\nNotation: *d(u,v)*\nd(u,v) = 0 iff u = v\nd(u,v) = d(v,u)\n\n## Bridge and cutpoint:\n![[Pasted image 20221020094302.png]]\n","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Physical-layer":{"title":"Physical layer","content":"\n# Physical layer\n**course:**\n## Definition\nTypes of cables and physical shit you use.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Physical layer #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Porters-competative-advantage":{"title":"Porter","content":"\n# Porter\n**course:**\n## Definition\nPorter's generic strategies describe how a company pursues competitive advantage across its chosen market scope. There are three/four generic strategies, either lower cost, differentiated, or focus.\n![[Pasted image 20220913093804.jpg]]\nBedrijven vallen meestal in 1 van de categorieën. Enorme bedrijven als Samsung kan verschillende categorieënen bevatten bvb telefoons en wasmachines.\n*Cost leadership gaat over laagste kosten, niet over de laagste prijzen. Een hoge winstmarge is dus een goede indicatie*\n\n## Betrekking tot IT\nOveral cost leadership:\n- Effieciente productie, just in time:\n\t- Alles wordt op het laatste moment gedaan en via software wordt er gepland \n- Product differentiation:\n\t- Onderscheidende klantenservice \n\t- IT is toegevoegde waarde op een product \n- Market niche / Focus:\n\t- Data mining\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Porter #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Postgress-migrations":{"title":"Postgress migrations","content":"\n# Postgress migration \n## Server-config\nga eerst naar `/server-config` en checkout feature/postgress\n```bash\ngit checkout feature/postgress\n```\n\nkopieer de json hieronder naar `~/.docker/config.json`\n```json\n{\n        \"auths\": {\n                \"docker.zorgverkeer.nl:5443\": {\n                        \"auth\": \"ZG9ja2VyOlJlZThpZzZh\"\n                }\n        }\n}\n```\n\nVoer in de `/server-config` map het install.sh script uit:\n```bash\n./install.sh development network services\n```\n-\u003e als je de error `psql: error: could not connect to server:` krijgt bovenstaande command nogmaals uitvoeren \n\n## Hub \nGa naar het mapje `hub.zorgverkeer.nl`\nCheckout testing branch:\n```bash\ngit checkout testing\n```\n\nCompile de server:\n```bash\n./compile.sh\n```\n\nLog in met een database client(DBeaver) in de postgress database. \n```\nHost: localhost\ndatabase: zorgverkeer_development\nUsername: postgress\n```\n\nVoeg een nieuw schema toe met de naam processing, voer de query hieronder uit\n```sql\ncreate extension \"mysql_fdw\"\n```\n\nLog in bij de postgress server met de volgende gegevens:\n```\nHost: localhost\ndatabase: zorgverkeer_testing\nUsername: zorgverkeer\nauthentication: Database native \n\nIn het SSH menu:\nHost/ip: testing.zorgverkeer.nl:22\nusername: root\nauthentication method: public key \nprivate key: your private ssh key\npassphrase: empty\n```\n\nNa het inloggen een export/backup maken van de database zorgverkeer testing. Dit kan in DBeaver bij tools en backup.\nrestore deze backup vervolgends bij de zorgverkeer_development database.\n\nrun de server:\n```bash\n./run.sh --http-server\n```\n","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Processen":{"title":"Processen","content":"\n# Processen\n**course:**\n## Definition\nHoe een [[organisatie]] haar activiteiten ordent. IT ondersteunt deze processen. Deze processen zijn vaak wat onoverzichtelijk dus ze kunnen worden uitgetekent met [[BPM]]. Een activiteit in een process heeft altijd een werkwoord. \n\n**Primaire processen:**\nactiviteiten waarvan de output direct bijdraagt aan het resultaat voor de klant. \n\n**Sturende processen:**\nactiviteiten die benodigd zijn om de [[organisatie]] en de processen te kunnen besturen \n\n**Ondersteunende processen:**\nActiviteiten die benodigd zijn om het primair process te faciliteren\n\n## Waarom?\n- hogere mate van efficiency \n- Kosten besparen \n- Versnellen van andere [[Processen]] \n- Verbetering contact met klanten \n- Product verbetering \n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Processen #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Project-Management":{"title":"Project Management","content":"Een project is **tijdelijk**, in die zin dat het een vast begin- en eindpunt heeft. Ook heeft een project een vooraf **gedefinieerde scope** en **vaste resources**. Project is **uniek**, en met een team van personen die **normaal niet samenwerken**. Het is **geen process**.\nDezelfde taken als [[Management#Hoofdfuncties:]]\n\n\n## Vormen:\n![[Pasted image 20221101101737.png]]\n**Improviserend werken**\n*Voordelen*\n- Snel aanpassen aan de situatie\n- Weinig verplichtingen \n\n*Nadelen*\n- Chaotisch, niet volgends de normale stappen\n- Geen structuur\n\n**Projectmatig werken**\n*Voordelen*\n- Een gestructureerde manier om iets nieuws uit de grond te stampen\n- Kan tot nieuwe inzichten leiden omdat je buiten je normale routine werkt\n\n*Nadelen*\n- Kost moeite om op te zetten, verschillende mensen die elkaar niet kennen moeten vaak samenwerken moeten vaak samenwerken\n\n**Routinematig werken** \n*Voordelen*\n- Structuur, mensen weten wat ze qua kwaliteit kunnen verwachten\n- Vaak efficient omdat je dingen uitpland\n\n*Nadelen*\n- Kan snel inneffiecient worden als er veel veranderingen zijn.\n- Het is heel moeilijk om een routine aan te passen of te starten.\n\n","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/RAM":{"title":"RAM","content":"\n# RAM\n**course:**\n## Definition\nRandom access memory, slowest memory but cheap. Typically in the GBs.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #RAM #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/RPA":{"title":"","content":"\u003e[!abstract] Definition\n\u003e\n\u003eRobotics Process Automation is wanneer routinematige handelingen worden geautomatiseerd door het gebruik van een programma.\n\n- RPA gebruik je boven op andere software, denk inscannen Pdf facturen.\n","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Race-conditions":{"title":"Race conditions","content":"\n# Race conditions\n**course:**\n## Definition\nRace conditions happen when 2 [[Threads]] want to write to the same part of [[memory]]. They race each other. This is solved by [[Threads]] requesting access to part of [[memory]] before writing. When they have requested access the thread has exclusive access. Other threads cannot write to that part of [[memory]]. When a thread gives up access it can be used by other [[Threads]]. \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Race conditions #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Radians":{"title":"Radians","content":"\n# Radians\n**course:**\n## Definition\n![[Pasted image 20220913132259.png]]\n$$\\frac{d}{dx}\\sin x = \\cos x$$\n**Conversion:**\nWhole circle is 2$\\pi$\n2$\\pi = 360 \\deg$\n$\\pi$ radians = 180 deg\n1 radians = $\\frac{180}{\\pi}$\n1 deg = $\\frac{\\pi}{180}$radians\n\n\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Radians #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Recursion":{"title":"Recursion","content":"\u003e[!abstract] Definition\n\u003e\n\u003ethe process of defining a thing in term of itself\n\n## Well-defined:\nTo really be able to calculate something with it the function must be **well-defined**. Inductive definitions are well-defined as they obeys the following two requirements: \n1. One or more **base values** of the function are **directly given** \n2. The function always refers to itself in a “smaller “cases, that is, closer to a base value.\n![[Pasted image 20221103093701.png]]\n","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Removing-vert-and-edges":{"title":"edges","content":"\n![[Pasted image 20221020091607.png]]","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Removing-vert/edges":{"title":"","content":"","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Reporting":{"title":"Reporting","content":"\n# Reporting\n**course:**\n## Definition\nHet doel van reporting is het begrijpbaar maken en vereenvoudigen van [[Data]]. Dit kan worden gedaan met raporten en [[KPI]] \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Reporting #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Representations":{"title":"Representations","content":"\n# Representations\n**course:**\n## Definition\n![[Pasted image 20220922102241.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Representations #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Rol-van-ICT":{"title":"Rol van ICT","content":"\n# Rol van ICT\nEr is een verschuiving van ondersteunen naar integreren. Vooral startups gebruiken leidend\n\n## Bedrijfsstrategie --\u003e ICT strategie (ondersteunend)\nBekijken vanuit je bedrijfsstrategie om je ICT vorm te geven\n![[Pasted image 20221011101013.png]]\n\n## Bedrijfsstrategie \u003c-- ICT strategie (leidend)\nICT vormt de bedrijfsstrategie \n![[Pasted image 20221011101107.png]]\n\n## Bedrijfsstrategie \u003c--\u003e ICT strategie (geintergreerd)\n![[Pasted image 20221011101315.png]]\n\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/SMART":{"title":"SMART","content":"\n# SMART\n**course:**\n## Definition\nGiving criteria to guide in the setting of goals and objectives for better results,\nBij Boarden van een vliegtuig:\n- Wat is boarden? We nemen hier het afmaken van de checklist door de stuwardes waar iedereen in het vliegtuig zit \n- Zorgen dat het meetbaar is. Hoeveelheid mensen die boarden is meetbaar \n- Acceptabel: Is je doel relevant.\n- Realistisch: Is het haalbaar?\n- Tijdsgebonden: per week/maand/jaar\n![[Pasted image 20220927102254.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #SMART #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/SWOT":{"title":"SWOT","content":"\n# SWOT\n**course:**\n## Definition\nAnalyse model om de kracht van bedrijven te analyseren\nSWOT:\n- Strength (krachten van bedrijf)  -\u003e  Intern\n- Weaknesses (zwaktes van bedrijf)  -\u003e  Intern\n- Opportunities (kansen van bedrijf)  -\u003e  Extern\n- Threats (bedrijgingen van bedrijf)  -\u003e  Extern\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #SWOT #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Samenvatting_IE":{"title":"","content":"## Tentamen vragen met uitleg:\n[Filmpje](https://bs-kaf-prod.universiteitleiden.nl/media/t/1_h2kodjoy/273110472)\n[[I en E Introductie]] \u003c-- alle aantekeningen\n\n## Definities:\n\u003e[!abstract] organisatie ijsberg:\n\u003e\n\u003eHet bovenste deel van de ijsberg is het makkelijkste te veranderen. Deze dingen kan je zien en zijn vaak tastbaar. Elementen die onderaan de ijsberg staan zijn niet of nauwelijks te zien en daardoor moeilijk aan te passen door organisaties. Echter hebben ze wel enorme invloed op de organisatie.\n\u003e![[Pasted image 20221207161138.png]]\n\n\u003e[!abstract] Integratie\n\u003e\n\u003eHoe kunnen bedrijven IT en nieuwe techniek toepassen en gebruiken.\n\n\u003e[!abstract] [[SWOT]] analyse\n\u003e\n\u003e![[Pasted image 20221207161422.png]]\n\n\u003e[!abstract] Organisatie\n\u003e\n\u003e**Een samenwerkingsverband**\n\u003eEen organisatie is een **herkenbare** eenheid waarin mensen op een **gecoordineerde** wijze en met behulp van **technische** en **financiele middelen**, **activiteiten** uitvoeren teneinde **gemeenschappelijk doelen** te realiseren\n\n\u003e[!abstract] Efficiënt vs Effectief\n\u003e\n\u003e**Efficiënt** is snel rennen, maar dit kan de verkeerde kant op zijn. **Effectief** is zorgen dat je de juiste route rent/op de juiste bestemming uit komt.\n\u003e**Efficiënt** gaat over dingen op de **juiste manier** doen. **Effectief** gaat over de **juiste dingen** doen.\n\n## Organisatie:\nEen bedrijf **moet een doel hebben**, **niet** alleen maar **geld verdienen**.\n\u003e[!abstract] Visie \n\u003e\n\u003e Waarom bestaat deze [[organisatie]], op **lange termijn** (Utopie)\n\n\u003e[!abstract] Missie\n\u003e\n\u003eHetzelfde als een **visie** maar dan op **korte termijn** (10 jaar)\n\n\u003e[!abstract] Doelen\n\u003e\n\u003e**Stellen doelen**, wat wil je bereiken over 3 jaar?\n\n\u003e[!abstract] Strategie\n\u003e\n\u003eHoe kunnen we deze **doelen bereiken** \n\n### 2 modelen:\n[[Porters competative advantage]]\n![[Pasted image 20221207162559.png]]\n\n[[Treacy en Wiersema]]\n![[Pasted image 20221207162623.png]]\nGebaseerd op porter:\n- **Product** leiderschap: **Het beste zijn** in een product\n- **Klant** partnerschap: **Coolblue**\n- **Kosten** leiderschap: **Operationeel** heel sterk\n\n### Organisatie structuur:\n![[Pasted image 20221207163024.png]]\n#### Voorbeeld:\nAlbert-heijn:\n**Strategies niveau:** Kunnen wij nog inkopen doen met oekraïne oorlog\n**Tactisch niveau:** Strategisch niveau doorvertalen naar operationeel. Zij leiden het operationele niveau.\n**Operationeel niveau:** Zijn de vakken gevuld? Komen de medewerkers opdagen\n\n### Vijf krachten model:\n![[Pasted image 20221207163751.png]]\n1.  De bedreiging van nieuwe toetreders: dit is de kracht die bepaalt hoe makkelijk het is voor **nieuwe bedrijven** om de markt te betreden en concurrentie te bieden aan **bestaande spelers**.\n2.  De onderhandelingspositie van **leveranciers**: dit is de kracht die bepaalt hoe sterk de leveranciers zijn in hun onderhandelingen met het bedrijf over prijzen en voorwaarden.\n3.  De onderhandelingspositie van **afnemers**: dit is de kracht die bepaalt hoe sterk de afnemers zijn in hun onderhandelingen met het bedrijf over prijzen en voorwaarden.\n4.  De bedreiging van **substituten**: dit is de kracht die bepaalt hoe sterk de substituten zijn voor het product of de dienst van het bedrijf.\n5.  De concurrentiedruk van **bestaande spelers**: dit is de kracht die bepaalt hoe sterk de concurrentie is tussen bestaande spelers in de markt.\n\n### Primaire en ondersteunende activiteiten:\n**Primaire activiteiten** zijn activiteiten die betrekking hebben op zowel de ontwikkeling van het product en de verkoop en overdracht aan de koper als de assistentie na verkoop. **Ondersteunende activiteiten** zijn de activiteiten die de primaire activiteiten ondersteunen. \n\n#### Waarde keten:\n![[Pasted image 20221208141931.png]]\n### Externe factoren voor een [[organisatie]]:\n**DESTEP** is een afkorting van de zes belangrijkste factoren die van invloed zijn op het ondernemersklimaat: **Demografie**, **Economie**, **Samenleving**, **Technologie**, **Omgeving** en **Politiek**. Het DESTEP-model is een instrument dat bedrijven en overheden kan helpen bij het analyseren van deze factoren om beter te begrijpen hoe ze invloed hebben op de markt en op het bedrijf.\n\n**Demografie** gaat over de bevolking en de verdeling van de bevolkingsgroepen, zoals leeftijd, geslacht, opleiding en inkomen. Dit kan van invloed zijn op de vraag naar producten en diensten van het bedrijf.\n\n**Economie** gaat over de economische omstandigheden, zoals de staat van de economie, inflatie, werkloosheid en rentetarieven. Dit kan van invloed zijn op de verkoopprijzen en de winstmarges van het bedrijf.\n\n**Samenleving** gaat over de maatschappelijke en culturele omstandigheden, zoals normen en waarden, levensstijl en veranderende behoeften en wensen van de consumenten. Dit kan van invloed zijn op de vraag naar producten en diensten van het bedrijf.\n\n**Technologie** gaat over de technologische ontwikkelingen en innovaties, zoals nieuwe producten, diensten en productiemethoden. Dit kan van invloed zijn op de concurrentiepositie van het bedrijf en op de vraag naar producten en diensten.\n\n**Ecologisch** gaat over de fysieke en ecologische omstandigheden, zoals weersomstandigheden, milieuwetgeving en natuurlijke hulpbronnen. Dit kan van invloed zijn op de productiekosten en de vraag naar producten en diensten van het bedrijf.\n\n**Politiek** gaat over de politieke omstandigheden, zoals de stabiliteit van de regering, de handelswetgeving en de relaties met andere landen. Dit kan van invloed zijn op de toegang tot buitenlandse markten en op de productiekosten van het bedrijf.\n\nDeze handvaten kan je gebruiken om een [[SWOT]] analyse te maken.\n\n**Mensen verschillen en er is dus niet 1 goede management strategie.**\n\n\n## [[Processen]]:\nHoe een [[organisatie]] haar activiteiten ordent. IT ondersteunt deze processen. Deze processen zijn vaak wat onoverzichtelijk dus ze kunnen worden uitgetekent met [[BPM]]. Een activiteit in een process heeft altijd een werkwoord. \n**Waarom**:\n- hogere mate van efficiency \n- Kosten besparen \n- Versnellen van andere [[Processen]] \n- Verbetering contact met klanten \n- Product verbetering. \n\n**Primaire processen:**\nactiviteiten waarvan de output direct bijdraagt aan het resultaat voor de klant. \n\n**Sturende processen:**\nactiviteiten die benodigd zijn om de [[organisatie]] en de processen te kunnen besturen \n\n**Ondersteunende processen:**\nActiviteiten die benodigd zijn om het primair process te faciliteren\n\n### Groepsvorming\n![[Pasted image 20220920093142.png]]\n\nElke keer als er een groepslid bijkomt begin je weer bij stap 1.\n- Forming:\n\t- Groep vormen \n- Storming:\n\t- Ruzie \n- Norming:\n\t- Normen en waarden opzetten na ruzie\n- Performing:\n\t- prestatie het hoogst \n- Adjourning:\n\t- Afscheid, feestje vieren :)\n\n\n### [[BPM]] (Bedrijfs proces modellering):\nBedrijfsprocesmodellering is het proces van het **vastleggen, analyseren, verbeteren en beheren van bedrijfsprocessen**. Dit kan worden gedaan door het gebruik van diagrammen of **grafische afbeeldingen** om de stappen van een proces te **visualiseren** en te documenteren, wat helpt om de efficiëntie en effectiviteit van het proces te verbeteren. Bedrijfsprocesmodellering kan ook worden gebruikt om **nieuwe processen te ontwikkelen** of om **bestaande processen te verbeteren** of aan te passen. Het doel van bedrijfsprocesmodellering is om de **kwaliteit, productiviteit en efficiency van bedrijfsprocessen te verhogen** en om de samenwerking en communicatie binnen een organisatie te verbeteren. \n\n**Een activiteit in een proces moet altijd een werkwoord zijn.**\n![[Pasted image 20221208150811.png]]\n\n#### Doel van proces modellering:\nHet ondersteunen van meerderen **doelstellingen** binnen een [[organisatie]], zoals:\n- Kwatliteits management \n- Risico beheer \n- Voldoen aan wet en regelgeving\n- Communicatie \nHet kan ook veranderingen ondersteunen:\n- Een fusie \n- Een reorganisatie \n- Uitbesteding\n\n#### Waarom zou je een bedrijfsproces optimalizeren?\n- Hogere maten van efficientie\n- Kosten besparing\n- Versnellen van bedrijfsprocessen \n- Verbeteren van klant contact\n- Productverbetering\n\n\n## [[Data]] \n### [[DIKW piramide]]: \n![[Pasted image 20221208153032.png]]\n1. **Data**: Dit is de basis van de piramide en bestaat uit onbewerkte feiten en cijfers. Deze data is in zijn ruwe vorm niet betekenisvol of bruikbaar voor mensen.\n2. **Informatie**: Als de data is georganiseerd en bewerkt, wordt het informatie. Dit is data die context heeft en betekenis heeft voor mensen. Bijvoorbeeld, de data van de bevolking van een stad kan worden georganiseerd en bewerkt tot informatie over de demografische samenstelling van die stad.\n3. **Kennis**: Als informatie wordt geïnterpreteerd en begrepen door mensen, wordt het kennis. Dit is informatie die begrepen is en die mensen kunnen gebruiken om problemen op te lossen of beslissingen te nemen.\n4. **Wijsheid**: De bovenste laag van de piramide is wijsheid. Dit is de toepassing van kennis in specifieke situaties en omvat ook het vermogen om kennis te gebruiken om adaptief te zijn en te leren van ervaringen.\n\n### [[Reporting]]:\nHet doel van reporting is het **begrijpbaar maken** en **vereenvoudigen** van [[Data]]. Hiervoor worden [[KPI]]s gebruikt. KPIs zijn variables om de **prestatie** van een onderneming te kunnen **analyseren**. Hiermee kan management **beslissingen maken**.\n![[Pasted image 20221208154207.png]]\n\n## Enterprise Information Systems\nEen informatiesysteem is een **collectie** van **technische** en **menselijke middelen**, dat voorziet in de opslag, verwerking, distributie en communicatie **van informatie** die **nodig** is voor de hele of een deel van een **organisatie**. **Een Enterprise Information System is niet 1 systeem!**\n\nEen EIS is geen technologie op zich, het is een overkoepelende term voor technologie die wordt gebruikt binnen een bedrijf.\n\n- EIS bieden een technologies platform waarmee [[organisatie]]s hun bedrijfsprocessen kunnen integreren.\n- Een EIS wordt vaak gebruikt in combinatie met een systeem voor klantenrelaltiebeheer en supply chain management \n\n### Doel:\nHet doel van een Enterprise Information System is het bieden van een technologisch platform aan grote organisaties, waarmee het mogelijk is om bedrijfsprocessen te integreren en te coördineren.\n- Customer Relationship Management \n- Supply Chain Management \n- Enterprise Resource Planning\n\n**De implementatie van zo'n systeem is lastig, omdat er mensen aan te pas komen, en mensen houden niet van verandering.**\n\n### Mogelijke vragen:\n- Welk soort [[Processen]] kunnen worden ondersteund door dit systeem?\n- \n\n### Voorbeelden:\n**ERP (Enterprise Resource Planning)**\nHet begrip ERP staat voor Enterprise Resource Planning, waarmee in een computerprogramma ofwel software wordt bedoeld. Dit soort computerprogramma's worden voornamelijk binnen organisaties gebruikt ter ondersteuning van alle processen binnen het bedrijf.\n- Dit lijdt tot efficiente [[Processen]]  \n- Je kan klantenrelaltiebeheer doen, financieel, eig alles.\n- Wordt vooral gebruikt voor hele brede [[Processen]] \n\nERP software is duur:\n- Alleen de licentie is een paar miljoen \n- [[Intergratie]]/implementatie is ook duur\n\nDe trend is dat bedrijven steeds meer losse systemen kopen.\n\n**CRM (Customer Relationship Management)**\n1. Verbeterd contactbeheer\n\t- Slaat bvb contactgegevens en informatie op als hulpdesk voor klanten. \n2. Cross-team samenwerking\n3. Verhoogde productiviteit\n4. Bevoegd verkoopbeheer\n5. Nauwkeurige verkoopprognoses\n6. Betrouwbare rapportage\n7. Verbeterde verkoopstatistieken\n8. Verhoogde klanttevredenheid en klantbehoud\n9. Verhoogde marketing-ROI\n10. Verrijkte producten en diensten\n\n![[Pasted image 20221004103147.png|300]]\n \n## Rol van ICT\n### Rol van ICT binnen porter:\n**Overal cost leadership:** \n- Efficiente productie\n- Just in time, het product maken zodra het besteld wordt (denk Tesla)\n**Product differentiation:**\n- Onderscheiden in klantenservice (denk Coolblue)\n- Onderscheiden met ICT als toegevoegde waarde\n**Focus:**\n- Data mining gebruiken om zo een nieuwe niche te ontdekken.\n\n\n### Rol van ICT binnen [[Treacy en Wiersema]]:\n**Productleiderschap:**\n- IT is een toegevoegde waarde aan een product\n**Klantpartnerschap:**\n- Onderscheidende klantenservice \n- Analyseren van klantenbehoeften\n**Kostenleiderschap:**\n- Productie effiecienter maken \n- Operationele uitmuntendheid\n\n### Leidend vs ondersteunend\nEr is een verschuiving van ondersteunen naar integreren. Vooral startups gebruiken leidend\n\n#### Bedrijfsstrategie --\u003e ICT strategie (ondersteunend)\nBekijken vanuit je bedrijfsstrategie om je ICT vorm te geven\n![[Pasted image 20221011101013.png]]\n\n#### Bedrijfsstrategie \u003c-- ICT strategie (leidend)\nICT vormt de bedrijfsstrategie \n![[Pasted image 20221011101107.png]]\n\n#### Bedrijfsstrategie \u003c--\u003e ICT strategie (geintergreerd)\n![[Pasted image 20221011101315.png]]\n\n### [[Strategic Alignment Model]] \n#### Alignment \nWe willen afstemming en ervoor zorgen dat bepaalde dingen met elkaar geintegreerd zijn. Alignment = [[Intergratie]] \nDit kan aan de hand van 2 assen:\n- Strategische Fit:\n\t- Strategie moet passen bij de rest van de [[organisatie]]. \n- Functionele [[Intergratie]] \n\t- Bedrijfs strategie moet passen bij IT strategie \n- Alles moet passen bij elkaar:\n\t- Bedrijfs strategie moet passen bij IT strategie, daarom de pijltjes ertussen.\n\nJe hoeft de aparte bolletjes niet te kennen.\n\n![[Pasted image 20221210123804.png]]\n\n#### Bedrijfs strategie \n![[Pasted image 20221011102412.png]]\n\n#### Bedrijfs structuur \n![[Pasted image 20221011102441.png]]\n\n#### IT strategie \n![[Pasted image 20221011102430.png]]\n\n#### IT  structuur \n![[Screenshot 2022-10-11 at 10.24.56.png]]\n\n\n## [[Management]] \nDe functie die **mensen coordineert** met het doel om doelen te behalen, gebruik makend van middelen op een zo **efficiënte en effective manier**. De hoofdfuncties van management zijn:\n1. *Forecasting*: **Voorspellen** wat er in de toekomst kan gaan gebeuren.\n2. *Planning*: Wat ga je doen om een doel later te behalen/**plan maken**.\n3. *Organizing*: Hoe ga je dit **plan** daadwerkelijk **uitvoeren**.\n4. *Commanding*: **Aansturen**, mensen instructies geven.\n5. *Coordinating*: **Overzicht houden**, zorgen dat alles goed loopt, sturen.\n6. *Controlling*: **Is** het geen wat er gedaan moest worden **daadwerkelijk gedaan**.\n\nEr zijn veel verschillende management stijlen, deze hoef je niet te kennen. Je moet vooral weten dat ze bestaan.\n\n### [[Project Management]]:\nEen project is **tijdelijk**, vast **begin en eindpunt**. Vooraf **gedefinieerde scope** (je weet vooraf waaraan je gaat werken/wat je gaat bereiken) en **vaste resources** (mensen, spullen, geld). [[Project Management]] is een **tijdelijke groepsactiviteit** ontworpen om een **uniek** product, service of resultaat te behalen. Om dit doel te bereiken maakt men gebruik van een team van personen die **normaal niet samenwerken**. Soms komen deze mensen uit verschillende [[organisatie]]s.\n\nJe kan op verschillende manieren werken binnen een [[organisatie]]. **Improvisatie**, **plan** en **routine**. Een programma is een hoop projecten samen. De projecten zijn zo groot dat ze apart moeten worden aangestuurd.\n1. *Project matig:* We gaan een nieuw systeem implementeren. Dit gaan we uniek doen met een bepaalde groep mensen.\n2. *Routine matig*: Elke week hetzelfde doen\n3. *Improvisatie*: Gewoon komen opdagen, of misschien niet en lekker je ding doen zonder enig plan.\n\n![[Pasted image 20221210132245.png]]\n\u003cbr\u003e\n| **Werkvorm**             | **Voordelen**                                                                                     | **nadelen** |\n| ------------------------ | ------------------------------------------------------------------------------------------------- | ----------- |\n| **Improviserend werken** | - Flexibel\u003cbr\u003e- Inspelen op veranderingen \u003cbr\u003e- Snel inspelen op de vraag\u003cbr\u003e- Geen voorschriften | - Weinig beheersing\u003cbr\u003e- Veel onzekerheid\u003cbr\u003e- Weinig stabiliteit \u003cbr\u003e- Geen richtlijnen \u003cbr\u003e- Opnieuw het wiel uitvinden            |\n| **Projectmatig werken**  | - Effectief \u003cbr\u003e - Resultaat gericht \u003cbr\u003e - Grote betrokkenheid van de medewerkers \u003cbr\u003e - Goede beheersing \u003cbr\u003e - Verbeterde samenwerking \u003cbr\u003e - Werknemers kunnen zelfstandig functioneren                  |      - Kostbare aanloopfase \u003cbr\u003e - Bureaucratisering doordat alles wordt vastgelegd \u003cbr\u003e - Zware taak als projectleider \u003cbr\u003e - Spanningen binnen de organisatie door tegengestelde belangen       |\n| **routine matig werken** |       - Effiecient \u003cbr\u003e - Kwaliteit neemt toe \u003cbr\u003e - Gelijke prestaties over een langere periode           |        - Niet flexibel \u003cbr\u003e - Geen mogelijkheid om in te spelen op veranderende vraag     |\n\n\n\n\n\n## Systemen uit de opdracht:\n","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Scheduling-policies":{"title":"Scheduling policies","content":"\n# Scheduling policies\n**course:**\n## Definition\nThe order the CPU execute [[process]]es and how that order is created.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Scheduling policies #Uni ","lastmodified":"2022-12-10T12:46:19.171418695Z","tags":null},"/Sequence":{"title":"Sequence","content":"\n# Sequence\n## Definition\nGive me an element with an index $a$ or $n$\n![[Pasted image 20221013094224.png]]\n![[Pasted image 20221013094355.png]]\n![[Pasted image 20221013100524.png]]\n![[Pasted image 20221013100813.png]]![[Pasted image 20221013101745.png|300]]\n![[Pasted image 20221013101227.png]]\n![[Pasted image 20221013101957.png]]\n![[Pasted image 20221013102007.png]]\n![[Pasted image 20221013102421.png]]\n![[Pasted image 20221013102439.png]]\n![[Pasted image 20221013102450.png]]\n\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Set-algebra":{"title":"Set algebra","content":"\n# Set algebra\n**course:**\n## Definition\nA [[Calculus]] for sets.\n![[Pasted image 20220915094639.png]]\n\n\u003e[!abstract] Associativity (Associa)\n\u003e\n\u003e$$(A\\cup B) \\cup C = (B\\cup C) \\cup A$$\n\n\u003e[!abstract] Commutativity (Comm)\n\u003e\n\u003e$$A \\cup B = B \\cup A$$\n\n\u003e[!abstract] Idempotency\n\u003e\n\u003e$$A \\cup A = A$$\n\n\u003e[!abstract] Distributivity\n\u003e\n\u003e$$A \\cap (B \\cup C) = (A \\cap B) \\cup (A \\cap C)$$\n\n\u003e[!abstract] Zero element\n\u003e\n\u003e $$A \\cup \\varnothing = A$$\n\n\u003e[!abstract] Unit element\n\u003e\n\u003e$$A \\cup U = U$$\n\n\u003e[!abstract] Double complement\n\u003e\n\u003e$$(A^c)^c=A$$\n\n\u003e[!abstract] Complement \n\u003e\n\u003e$$A \\cap A^{c}= \\varnothing $$\n\n\u003e[!abstract] De Morgan\n\u003e\n\u003e$$(A \\cup B)^c = A^c \\cap B^c$$\n\n**Principle of Duality**\nWhen we perform duality, then the union will be replaced by intersection, or intersection will be replaced by the union. The universal will also be replaced by null, or null will be replaced by universal.\n\n**Operations:**\ncommutativity x+y = y+x  \nassociativity x+(y+z) = (x+y)+z\n\n∆ is a operations\ncommutativity x ∆ y = y ∆ x \nassociativity x ∆ (y ∆ z) = (x ∆ y) ∆ z\n\ncommutativity A∩B = B∩A,  A∪B = B∪A \nassociativity A∩(B∩C) = (A∩B)∩C,  A∪(B∪C) = (A∪B)∪C\n\nThis also works for symetric difference, but it does not for difference\n\n**Unit and Zero elements:**\n- 1 ⋅ x = x unit element \n- 0 ⋅ x = 0 zero element\n![[Pasted image 20220915093339.png]]\n\n**Distributivity**\n![[Pasted image 20220915093609.png]]\n![[Pasted image 20220915093806.png]]\n![[Pasted image 20220915093845.png]]\n\n## De Morgan:\n![[Pasted image 20220915094248.png]]\n\n## Complement rules\n![[Pasted image 20220915094449.png]]\n\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Set algebra #Uni ","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Span":{"title":"Span","content":"\u003e[!abstract] Theorem\n\u003e\n\u003eLet A be an m × n matrix. The columns of A span $R^m$ iff every row of an echelon form for A contains a pivot\n\n## Linear independence:\n1. There is nontrivial solution to vector equation $x_{1} \\vec{V_{1}} + ... + x_{n} \\vec{V_{n}} = \\vec{0}$\n2. There is a nonzero solution to the matrix equation $A \\vec{x} = \\vec{0}$\n3. One of $\\vec{V_{1}},...,\\vec{V_{n}}$ is a linear combination of the others \nIf 1, 2 and/or 3 holds, then $\\vec{V_{1}},...,\\vec{V_{n}}$ are linear dependent.\n![[Pasted image 20221115174852.png]]\n![[Pasted image 20221115175543.png]]\n\n\u003e[!abstract] Definition\n\u003e\n\u003eSuppose N \u003e M, then $\\vec{V_{1}},...,\\vec{V_{n}} \\in N^{m}$ are linearly dependent. \n\n\u003e[!abstract] Definition\n\u003e\n\u003e$\\vec{V_{1}},...,\\vec{V_{n}}$ are linearly dependent iff there is an i with span($\\vec{V_{1}},...,\\vec{V_{n}}$) = span($...,\\vec{V_{n}}$) \n## Example:\n![[Pasted image 20221115173253.png]]\n","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Special-graphs":{"title":"Special graphs","content":"## Complete graph:\n\u003e[!abstract] Definition\n\u003e\n\u003eA Graph with all vertices connected to each other.\n\n![[Pasted image 20221020103925.png]]\n\n## $K_n$−regular:\n\u003e[!abstract] Definition\n\u003e\n\u003eAll vertices have degree kK\n\n![[Pasted image 20221020104025.png]]\n## $K_{m,n}$ complete bipartite \n![[Pasted image 20221020104341.png]]\n\n## Bipartite graph:\n\u003e[!abstract] Definition\n\u003e\n\u003eA graph G is called bipartite if the vertices can be split in two disjoint subsets $V_1$ and $V_2$ so that all edges run between $V_1$ and $V_2$.\n\nA graph G is **2−colorable** if the graph’s vertices can be colored with two colors in such a way that adjacent vertices have a different color.\n![[Pasted image 20221020104531.png]]\n\u003e[!abstract] Definition\n\u003e\n\u003eGiven a graph G = (V, E). The following statements are equivalent: \n\u003e(1) *G is bipartite* \n\u003e(2) *G only has cycles of even length* \n\u003e(3) G is 2−colorable\n\n(2) =⇒ (1): Suppose G only has cycles of even length. We are going to color the nodes in the graph orange and blue to distinguish the two partitions. Choose any vertex x of the graph and color it blue; then color all vertices adjacent to x orange. If a node is colored, its neighbors get the opposite color. This does not lead to problems: there is no (uncolored) node y with both a blue and an orange neighbor. That would mean that y could be reached from x with both an odd and an even number of edges, and we find a circle of odd length.\n![[Pasted image 20221020105027.png]]\n","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Stadia-Groepsvorming":{"title":"Stadia Groepsvorming","content":"\n# Stadia Groepsvorming\n**course:**\n## Definition\n![[Pasted image 20220920093142.png]]\n\nElke keer als er een groepslid bijkomt begin je weer bij stap 1.\n- Forming:\n\t- Groep vormen \n- Storming:\n\t- Ruzie \n- Norming:\n\t- Normen en waarden opzetten na ruzie\n- Performing:\n\t- prestatie het hoogst \n- Adjourning:\n\t- Afscheid, feestje vieren :)\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Stadia Groepsvorming #Uni ","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Strategic-Alignment-Model":{"title":"Strategic Alignment Model","content":"\n# Strategic Alignment Model\n## Alignment \nWe willen afstemming en ervoor zorgen dat bepaalde dingen met elkaar geintegreerd zijn. \nAlignment = [[Intergratie]] \nDit kan aan de hand van 2 assen:\n- Strategische Fit:\n\t- Strategie moet passen bij de rest van de [[organisatie]]. \n- Functionele [[Intergratie]] \n\t- Bedrijfs strategie moet passen bij IT strategie \n- Alles moet passen bij elkaar:\n\t- Bedrijfs strategie moet passen bij IT strategie, daarom de pijltjes ertussen.\n\n![[Pasted image 20221011102818.png]]\n\n## Bedrijfs strategie \n![[Pasted image 20221011102412.png]]\n\n## Bedrijfs structuur \n![[Pasted image 20221011102441.png]]\n\n## IT strategie \n![[Pasted image 20221011102430.png]]\n\n## IT  structuur \n![[Screenshot 2022-10-11 at 10.24.56.png]]\n\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Studying-and-presenting":{"title":"Studying and presenting","content":"\n## Notes \u0026 Ideas\n- [[Learing and study strategies]]\n- [[Academic Fraud]]\n## Assignments\n- [[Opdracht 1]]\n## Lectures\n## Extras\n### Grade breakdown\n**4 opdrachten** \n- fail, pass, good \n\n**To complete the course with pass:**\n- Hand in all assignments \n- at least 3 out of 4 graded with pass\n\n**To complete the course with good:**\n- Hand in all assignments \n- at least 3 out of 4 graded with good\n\n*All assignments need to be submitted* \n### Grading scale\n### Tips\n### Emails \u0026 Resources\n### Important dates\n### Classmates\n\n## Refrences:\n- [[Uni]]\n\n---\nTags: #Course #Studying and presenting #Uni ","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Subgraphs":{"title":"Subgraphs","content":"## Definition:\nA graph in a graph. All edges and vertecies in the subgraph are also in the original graph: see orange in figure\n![[Pasted image 20221020091058.png]]\n## Induced subgraph:\nA subgraph that includes all edges of the original graph: see green in figure","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Subsets":{"title":"Subsets","content":"\n# Subsets\n**course:**\n## Definition\nA is a [[Subsets]] of B if every element form A can also be found in B\n**Theorem:**\nLet A, B and C be any sets. Then: \n- (i) A ⊆ A *Reflexive*\n- (ii) if A ⊆ B and B ⊆ A, then A = B *anti-symmetric* \n- (iii) if A ⊆ B and B ⊆ C, then A ⊆ C *transitive*\n\n**Notation:**\n- A ⊆ B means that every element of A can also be found in B: for all x, if x ∈ A, then x ∈ B\n- A ⊆ B, subset: inclusion, A is contained/included in B, B contains/includes A \n- A ⊂ B, proper subset: B has at least one more element than A!\n\nAnalogy to inequality. If x ≤ y, then either:  \n- x = y or \n- x \u003c y\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Subsets #Uni ","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Summary-FoCS":{"title":"Summary","content":"\n## **Sets:** [[set]]\n\u003e[!abstract] Definition\n\u003e\n\u003eSet is a collection of things. A set is a concept intended to turn serveral seperate objects into one whole, new object. They are the basis of modern mathematics. A aset consists of elements.  \n\n### Notation:\n$A = \\{ 2, 3, 4, 5 \\}$\n$2 ∈ A$\n2 is in A\n\n$A = \\{ 1, 2, 3, 4\\}$\n$B = \\{ 2, 3\\}$\n$A \\subseteq B$\n\n$\\{X | X \\text{ is even and } X \\geq 0\\}$\nMeans^: $\\{0, 2, 4, ...\\}$\n\n### Operations: [[set operations]]\n#### Union: ∪ \nCombine sets:\n![[Pasted image 20220908103744.png]]\n#### Intersection: ∩\nIntersect sets \n![[Pasted image 20220908103809.png]]\n#### Compliment:\nEverything outside A\n![[Pasted image 20220908104400.png]]\n#### Difference:\nA / B\n![[Pasted image 20220908104457.png]]\n\n\n### Powersets: [[powerset set]]\n\u003e[!abstract] Definition\n\u003e\n\u003epowerset of S: **it contains all subsets of a set S.** P ({a,b}) = { 0/, {a}, {b}, {a,b} } \n\u003e![[Screenshot 2022-09-22 at 09.07.08.png]]\n\n### Partition set: [[partition set]] \n\u003e[!abstract] Definition\n\u003e\n\u003epartition of S: **some disjoint nonempty subsets that together** **are S.** \n{ {1,4}, {2}, {3,5,6} } is a partition of { 1,2,3,4,5,6 }\n*There is no overlap between them*\n\n### Set algebra: [[Set algebra]] \n\u003e[!abstract] Definition\n\u003e\n\u003e![[Pasted image 20220915094639.png]]\n\n\n### Counting sets: [[Counting sets]] \n\u003e[!abstract] Definition\n\u003e\n\u003eIf we want to count the elements in the union of sets, we should *not \ncount the common elements twice*\n\nCounting with finite sets:\n![[Pasted image 20220915104201.png]]\n![[Pasted image 20220915104302.png]]\n\n\n---\n## **Relations:** [[relation]]\n\u003e[!abstract] Definition\n\u003e\n\u003eA relation is a subset of a Cartesian product. \n![[Pasted image 20220922101358.png|200]]\n\n### Binary relation:\n\u003e[!abstract] Definition\n\u003e\n\u003eA binary relation describes a relationship between the elements of 2 sets. If A and B are sets, then a binary relation R from A to B is a subset of the Cartesian product of A and B (A x B).\n\n### Helpfull other relations\n- [[Identity relation]]\n- [[Representations]]\n- [[Inverse relation]]\n- [[Domain and range]]\n\n### Types of relations:\n- **Reflexive**: A = A\n- **Symmetric**: A = B and B = A \n- **Transative**: A = B and B = C so A = C \n**Partial order**: transative and reflexive \n**Equivalence relation**: symmetric, transative and reflexive \n**Example:** [[Types of relations#Example:]]\n\n## Anti Symmetric:\n![[Pasted image 20221022184141.png]]\n\n### P-closure:\nAdd as little as possible to a [[relation]] so it becomes transitive or any other type of relation.¥\n\n### Counting:\n\u003e[!warning] Definition\n\u003e\n\u003ethere are $2^{n(A)\\cdot n(B)}$ different relations from A to B possible \n\n- A set of $n$ elements has $2^n$ [[subsets]] \n- For finite sets $A$ and $B$, $A\\times B$ has $n(A)\\cdot n(B)$ elements, meaning *objects in A times objects in B*\n- So, there are $2^{n(A)\\cdot n(B)}$ different relations from A to B possible\n\n---\n## **Functions:** [[functions (discr)]]\n\u003e[!abstract] Definition\n\u003e\n\u003eA function from $A \\to B$ assigns to *each* element $x$ of $A$. one element $y$ of $B$\n\u003e- Every A only has one [[relation]] to a B\n\u003e- It can't have multiple [[relation]]s from A \n\n![[Screenshot 2022-10-06 at 10.16.53.png]]\n\n### Identity:\n$f(x) = x$\n\n### Examples:\n![[Screenshot 2022-10-06 at 10.21.23.png]]\n\n\n---\n## **Pairs:** [[pairs]]\n2 pairs are equal:\n- $(a,b) = (c,d)$ if $a = c$ and $b = d$\n- (A, B) is not equal to (B, A)  $\\to$  *ELEMENTS*\n- {A, B} is equal to {B, A}  $\\to$  *SETS*\n![[Screenshot 2022-09-22 at 09.41.37.png]]\n\n\n---\n## **Graphs:** [[Graph Theory]]\n### Terminology:\n**[[Directed Graphs]]**: Graph met pijltjes\n**[[Undirected  Graphs]]**: Graph zonder pijltjes \n**Degree**: The edges out/in a vertex\n**[[Handshaking lemma]]**: The sum of the degrees in a graph is 2 times the edges\n**[[Removing vert and edges]]**: \n- if vertex $v \\in V$, then $G - v$ is the graph resulting when we remove $v$ and al it's [[edges]] that are connected to $v$ in $G$\n- if $e \\in E$ then $G - e$ is the graph resulting when removing an edge.\n\n### Subgraphs: [[Subgraphs]]\n**[[Subgraphs]]**: subsets but with graphs. All edges and vertecies in the subgraph are also in the original graph. *See orange in figure below*\n**Induced subgraph**: A subgraph that includes all edges of the original graph. *See green in figure below*\n![[Pasted image 20221020091058.png]]\n\n### Paths: [[Paths]]\nread [[paths]]\n\n### Types of graphs: \n#### [[Isomorphic graphs]]:\n\u003e[!info] Definition\n\u003e\n\u003eA graph that has de same edges an vertices. They can differ in names of vertices. The vertices need to have the same number of edges connected to them\n\u003e![[Pasted image 20221020103150.png]]\n\n#### **[[Eulerian circuit]]**:\n\u003e [!info] Definition \n\u003e \n\u003e An Eulerian circuit is a closed path (walk) that visits each edge exactly once.\n\n#### Eulerian trail:\n\u003e[!info] Definition \n\u003e\n\u003eAn Eulerian trail is a path that contains each edge exactly once.\n![[Pasted image 20221020101313.png]]\n\n#### [[Hamiltonian cycle]]\n\u003e [!info] Definition \n\u003e\n\u003eA Hamiltonian cycle (circuit) is a closed path (walk) that contains each vertex except the end points exactly once.\n\n\u003e [!info] Definition \n\u003e\n\u003eA Hamiltonian path is a path that contains each vertex exactly once.\n\n![[Pasted image 20221020102139.png]]\n\n**Hamiltonian graph** contains a Hamiltonian cycle.\n\n### Special Graphs: [[Special graphs]]\nRead [[Special graphs]]","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Taylor-Polynomials":{"title":"Taylor Polynomials","content":"\n[Video](https://www.youtube.com/watch?v=3d6DsjIBzJ4)\nGiven a [[functions]], find a function that approximates it\nApproximation should satisfy $g(a) = f(a)$\nA better approximation should satisfy $g'(a)=f'(a)$\n","lastmodified":"2022-12-10T12:46:19.195420284Z","tags":null},"/Terminology-FoCS":{"title":"","content":"## [[Set algebra]]\n\n| Law               | Option A                             | Option B                             |\n|-------------------|--------------------------------------|--------------------------------------|\n| Idempotent laws   | (1a) A ∪ A = A                       | (1b) A ∩ A = A                       |\n| Associative laws  | (2a) (A ∪ B) ∪ C = A ∪ (B ∪ C)       | (2b) (A ∩ B) ∩ C = A ∩ (B ∩ C)       |\n| Commutative laws  | (3a) A ∪ B = B ∪ A                   | (3b) A ∩ B = B ∩ A                   |\n| Distributive laws | (4a) A ∪ (B ∩ C) = (A ∪ B) ∩ (A ∪ C) | (4b) A ∩ (B ∪ C) = (A ∩ B) ∪ (A ∩ C) |\n| Identity laws     | (5a) A ∪ ∅ = A                       | (5b) A ∩ U = A                       |\n|                   | (6a) A ∪ U = U                       | (6b) A ∩ ∅ = ∅                       |\n| Involution laws   | (7) $(A^c)^c$ = A                        |                                      |\n| Complement laws   | (8a)$A \\cup A^c$ =U                          | (8b)$A \\cap A^c$ =∅                          |\n|                   | (9a)UC =∅                            | (9b)$\\varnothing ^c$ =U                            |\n| DeMorgan’slaws    | (10a)$(A \\cup B)^{c}$ =$A^{c} \\cap B^{c}$                  | (10b)$(A \\cap B)^c$ =$A^c$ ∪ $B^c$                  |\n\n\u003e[!abstract] Math to Word:\n\u003e\n\u003e$A \\cup B=$ $x\\in A$ or $x\\in B$\n\u003e$A \\cap B=$ $x\\in A$ and $x\\in B$\n\u003e$A^{c}=$ $x\\notin A$\n\u003e$A / B=$ $x\\in A$ and $x\\notin B$\n\n## Sets\n\u003e[!abstract] Special Symbols\n\u003e\n\u003eSome sets will occur very often in the text, and so we use special symbols for them. Some such symbols are: \n\u003eN = the set of natural numbers or positive integers: 1, 2, 3, . . \n\u003eZ = the set of all integers: ...,−2,−1,0,1,2,...  \n\u003eQ = the set of rational numbers \n\u003eR = the set of real numbers \n\u003eC = the set of complex numbers \n\u003eObserve that N ⊆ Z ⊆ Q ⊆ R ⊆ C.\n\n\u003e[!abstract] Disjoint Sets\n\u003e\n\u003eTwo sets A and B are said to be disjoint if they have no elements in common. \n\n\u003e[!abstract] Dual\n\u003e\n\u003eThe dual E∗ of E is the equation obtained by replacing each occurrence of ∪, ∩, U and ∅ in E by ∩, ∪, ∅, and U, respectively. For example, the dual of:\n\u003e(U∩A)∪(B∩A)=A is (∅∪A)∩(B∪A)=A\n\n\u003e[!abstract] Powerset\n\u003e\n\u003eSuppose S = {1,2,3}. Then  \n\u003eP(S) = [∅, {1}, {2}, {3}, {1, 2}, {1, 3}, {2, 3}, S]\n\n## Counting:\n\u003e[!abstract] Counting for non disjoint sets  (2)\n\u003e\n\u003eSuppose A and B are finite sets. Then A ∪ B and A ∩ B are finite and \n\u003en(A∪B) = n(A)+n(B)−n(A∩B)\n\n\u003e[!abstract] Counting for non disjoint sets (3)\n\u003e\n\u003eSuppose A,B,C are finite sets.Then A∪B∪C is finite and \n\u003en(A∪B ∪C) = n(A)+n(B)+n(C)−n(A∩B)−n(A∩C)−n(B ∩C)+n(A∩B ∩C)\n\n\u003e[!abstract] Theorem\n\u003e\n\u003eSuppose A and B are finite disjoint sets.Then A∪B is finite and \n\u003en(A∪B) = n(A)+n(B)\n\n\u003e[!abstract] Powerset counting\n\u003e\n\u003e$2^{n(S)}$\n\n\u003e[!abstract] Counting \\\n\u003e\n\u003en(A\\B) = n(A) − n(A ∩ B)\n\u003eFor example, suppose an art class A has 25 students and 10 of them are taking a biology class B. Then the number of students in class A which are not in class B is:\n\u003en(A\\B) = n(A)−n(A∩B) = 25−10 = 15\n\n## Relations:\n\u003e[!abstract] A × B\n\u003e\n\u003eLet A = {1,2} and B = {a, b, c}. Then  \n\u003eA×B ={(1,a), (1,b), (1,c), (2,a), (2,b), (2,c)}\n\u003eB×A={(a,1), (b,1), (c,1), (a,2), (b,2), (c,2)}\n\u003en(A×B) = n(A)n(B) = 6\n\u003e$A^{2} = A \\times A$\n\n\u003e[!abstract] binary relation\n\u003e\n\u003eA binary relation or, simply,relation from A to B is a subset of A×B\n\u003e:\n\u003e(i) (a,b)∈R;we then say “a is R-related to b”, written aRb.  \n\n\u003e[!abstract] Domain and Range\n\u003e\n\u003eThe domain of a relation R is the set of all first elements of the ordered pairs which belong to R, and the\nrange is the set of second elements\n\n\u003e[!abstract] Inverse Relation\n\u003e\n\u003eFor example, let A = {1, 2, 3} and B = {x, y, z}. Then the inverse of\n\u003eR = {(1,y),(1,z),(3,y)} is R−1 = {(y,1),(z,1),(y,3)}\n\n\u003e[!abstract] COMPOSITION OF RELATIONS\n\u003e\n\u003eLet A = {1,2,3,4}, B = {a,b,c,d}, C = {x,y,z} \n\u003eand let R = {(1,a),(2,d),(3,a),(3,b),(3,d)} \n\u003eand let S = {(b,x),(b,z),(c,y),(d,z)}\n\u003e\n\u003eR◦S ={(2,z),(3,x),(3,z)}\n\n\u003e[!abstract] CLOSURE\n\u003e\n\u003eLet R be a relation on a set A. Then:  \n(i) R ∪ ^A is the reflexive closure of R.\n\u003e(ii) $R \\cup R^{-1}$ is the symmetric closure of R.\n\u003e\n\u003eIn other words, reflexive(R) is obtained by simply adding to R those elements (a, a) in the diagonal which do not already belong to R, and symmetric(R) is obtained by adding to R all pairs (b, a) whenever (a, b) belongs to R.\n\n\u003e[!abstract] Equivalence relation\n\u003e\n\u003eConsider a nonempty set S. A relation R on S is an equivalence relation if R is reflexive, symmetric, and transitive. That is, R is an equivalence relation on S if it has the following three properties:\n\u003e\n\u003e(1) For every a ∈ S, aRa. \n\u003e(2) If aRb, then bRa. \n\u003e(3) If aRb and bRc, then aRc.\n\n\u003e[!abstract] Partial order relation\n\u003e\n\u003e relation R on a set S is called a partial ordering or a partial order of S if R is reflexive, antisymmetric, and transitive. A set S together with a partial ordering R is called a partially ordered set or poset\n\n## Functions:\n\u003e[!abstract] Definition\n\u003e\n\u003eSuppose that to each element of a set A we assign a unique element of a set B; the collection of such assignments is called a function from A into B. The set A is called the domain of the function, and the set B is called the target set or codomain\n\u003e\n\u003e**Remark:** Whenever a function is given by a formula in terms of a variable x, we assume, unless it is otherwise stated, that the domain of the function is R (or the largest subset of R for which the formula has meaning) and the codomain is R\n\n\u003e[!abstract] Relation\n\u003e\n\u003eThere is another point of view from which functions may be considered. First of all, every function f : A → B gives rise to a relation from A to B called the graph of f and defined by\n\n\u003e[!abstract] Composit function\n\u003e\n\u003eConsider functions f: A → B and g: B → C; that is, where the codomain of f is the domain of g. Then we may define a new function from A to C, called the composition of f and g and written g◦f , as follows:\n(g◦f )(a) ≡ g(f (a))\n\n\u003e[!abstract] One to One (injective)\n\u003e\n\u003eIf every value in set A maps with a function to a unique value in set B\n\n\u003e[!abstract] Onto (surjective)\n\u003e\n\u003eIf every B has an A mapped to it.\n\n\u003e[!abstract] INVERTIBLE FUNCTIONS (bijective)\n\u003e\n\u003eIf a function is both One to One and Onto it can be inverted: $A \\to B$ becomes $B \\to A$\n\n\u003e[!abstract] Permutations \n\u003e\n\u003eAn invertible (bijective) function σ: X → X is called a permutation on X. The composition and inverses of permutations on X and the identity function on X are also permutations on X.\n\u003e\n\u003eThe set of all such permutations is denoted by Sn, and there are n! = n(n − 1)···3 · 2 · 1 of\nthem. For example,\n\n## Graphs \n\u003e[!abstract] Multigraphs\n\u003e\n\u003eGraph with multiple edges from the same 2 vertices\n\n\u003e[!abstract] Deg\n\u003e\n\u003eThe sum of the degrees of the vertices of a graph G is equal to twice the number of edges in G. \n\u003e\n\u003eA vertex is said to be even or odd according as its degree is an even or an odd number. Thus, A and D are even vertices whereas B and C are odd vertices.\n\n\u003e[!abstract] Distance and Diameter\n\u003e\n\u003eConsider a connected graph G. The distance between vertices u and v in G, written d(u, v), is the length of the shortest path between u and v. The diameter of G, written diam(G), is the maximum distance between any two points in G\n\n\u003e[!abstract] Cutpoint\n\u003e\n\u003eA cutpoint is a vertex on a graph that when removed from the graph splits the graph in 2 separate graphs \n\n\u003e[!abstract] Bridge\n\u003e\n\u003eA bridge is an edge e that when removed from the graph splits the graph in 2 separate graphs \n\n\u003e[!abstract] Definition: Walk\n\u003e\n\u003e**Walk**: An $x\\to y$ walk is a sequence\n\u003e**Closed walk**: In a closed walk $x = y$\n\u003e![[Pasted image 20221022191923.png]]\n\n\u003e[!abstract] Definition: Trail\n\u003e\n\u003e**Trail**: A walk with no repeated edges\n\u003e**Circuit**: A closed trail \n\u003e![[Pasted image 20221022192136.png]]\n\n\u003e[!abstract] Traversable trail\n\u003e\n\u003eA path that which includes all vertices and uses each edge exactly once.\n\n\u003e[!abstract] Eularian trail\n\u003e\n\u003eA closed traversable trail\n\n\u003e[!abstract] Eularian Graph\n\u003e\n\u003eA graph where there exists a eularian trail.\n\n\u003e[!abstract] Theorem 8.4\n\u003e\n\u003eA finite connected graph is eularian if and only if each vertex has even degree\n\n\u003e[!abstract] Corollary 8.4\n\u003e\n\u003eEvery finite graph with two odd vertices is traversable. A traversable trail may begin at either odd vertex and end at the other odd vertex.\n\n\u003e[!abstract] Hamiltonian Graph/circuit\n\u003e\n\u003eA Hamiltonian circuit is a closed path the visits every vertex exactly ones. If G does admit a hamiltonian circuit, then g is called a hamiltonian graph.\n\n\u003e[!abstract] Definition: Simple path\n\u003e\n\u003e**Path**: A walk with no repeated vertices\n\u003e**Closed path**: A closed path:\n\u003e**Cycle:** Closed path with length 3 or more\n\u003e![[Pasted image 20221022192227.png]]\n\n\u003e[!abstract] Definition: Connected Graph\n\u003e\n\u003e![[Pasted image 20221022192430.png]]\n\n\u003e[!abstract] Weights\n\u003e\n\u003eA graph is called a weighted graph if each edge of G is assigned a non-negative number w(e). The weight of a graph is all weights added up.\n\n\u003e[!abstract] Complete graph:\n\u003e\n\u003eA graph G is said to be complete if every vertex in G is connected to every other vertex in G. Thus, a complete graph G must be connected. The complete graph with n vertices is denoted by $K_{n}$\n\u003e![[Pasted image 20221026111337.png]]\n\n\u003e[!abstract] Regular graphs\n\u003e\n\u003eA graph G is regular of degree k or k-regular if every vertex has degree k. In other words, a graph is regular if every vertex has the same degree.\n\u003e![[Pasted image 20221026111643.png]]\n\n\u003e[!abstract] Bipartite graph\n\u003e\n\u003eA graph G is said to be bipartite if its vertices V can be partitioned into two subsets M and N such that each edge of G connects a vertex of M to a vertex of N. By a complete bipartite graph, we mean that each vertex of M is connected to each vertex of N; this graph is denoted by $K_{m,n}$ where m is the number of vertices in M and n is the number of vertices in N, and, for standardization, we will assume m ≤ n\n\u003e![[Pasted image 20221026111849.png]]\n\n\n","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/TestNotitie":{"title":"TestNotitie","content":"## Definition \n\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Threads":{"title":"Threads","content":"\n# Threads\n**course:**\n## Definition\nA [[process]] can have subprocesses called threads. They have part of the information of the process they belong to. They all uses the same [[memory]] and the same [[registers]]. The threads get there own [[program counter]]. This is efficient because swithing between threads is a lot less expensive than [[context switching]].\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Threads #Uni ","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Transforms":{"title":"","content":"| Transform                               | Standard matrix | Onto? | One-to one? |\n| --------------------------------------- | --------------- | ----- | ----------- |\n| $R \\to R^{2}$, $T(x) \\to [\\frac{x}{x}]$ | $\\frac{1}{1}$   | no    | yes         |\n|                                         |                 |       |             |\n|                                         |                 |       |             |\n","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Transistor":{"title":"Transistor","content":"\n# Transistor\n**course:**\n## Definition\nA electronic switch \n![[Pasted image 20220921100416.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Transistor #Uni ","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Transport-layer":{"title":"Transport layer","content":"\n# Transport layer\n**course:**\n## Definition\nThe [[Transport layer]] makes sure you can connect from 1 [[computer]] to another. There are 2 different [[protocols]]:\n- UDP:\n\t- Connectionless transport. Doesn's care if the message arives or not. It just sends them. The order of arival is not important \n- TCP:\n\t- Creates a communication tunnel and makes sure the messages get received in the right order and are received at all.\n\n*Multiplexing:*\n- The sharing of a TCP connection between different processes. There are several things coming in and serveral things coming out. \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Transport layer #Uni ","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Treacy-en-Wiersema":{"title":"Treacy \u0026 Wiersema","content":"\n# Treacy \u0026 Wiersema\n**course:**\n## Definition\n![[Pasted image 20220913101400.png]]\nVerschil tussen product onderscheid vs customer service.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Treacy \u0026 WIersema #Uni ","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Trigonometry":{"title":"Trigonometry","content":"\n# Trigonometry\n**course:**\n## Definition\nAngles and shit \n- [[Angles]]\n- [[Radians]] \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Trigonometry #Uni ","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Types-of-relations":{"title":"Types of relations","content":"\n# Types of relations\n![[Screenshot 2022-10-06 at 09.15.11.png]]\n\n![[Screenshot 2022-10-06 at 09.17.21.png|100]]\n- reflexive: A contains A\n- AntiSym: A contains B and B contain A is false \n- Trans A contains B and B contains C = A contain C\nSo, partial order \n\n## Example:\n![[Pasted image 20221007114716.png]]\n\n## Equivalence relations and class:\nEquivalence class: All elements x is in a relation with \n![[Screenshot 2022-10-06 at 09.32.35.png|400]]\nR = {(1,1), (1,2), (2,1), (2,2), (3,3)}\nA = {1, 2, 3}\n[1] = {1, 2}\n[2] = {1, 2}\n[3] = {3}\n\n\n## Partial order \u0026 Equality:\n![[Pasted image 20220929100816.png]]\n\n## Reflexive:\nAll elements must relate to themselves.\n![[Pasted image 20220929101328.png]]\n\n## Irreflexive:\n**provided that no element is related to itself** so no ( 1 , 1 )\n![[Types of relations 2022-09-29 10.17.38.excalidraw.svg]]\n\n## Symmetric \u0026 Antisymmetric \nA symmetric relation is a type of binary relation. An example is the relation \"is equal to\", because if a = b is true then b = a is also true.\n![[Types of relations 2022-09-29 10.29.02.excalidraw.svg]]\nIn mathematics, a binary relation R on a set X is antisymmetric if there is no pair of distinct elements of X each of which is related by R to the other.\n\n## Transitive\n![[Pasted image 20220929103453.png]]\n![[Pasted image 20220929103512.png|200]]\n\n\n## P-closure:\nAdd as little as possible to a [[relation]] so it becomes transitive or any other type of relation.\n\n## Backlinks\n\n\n## Refrences:\n\n---\nTags: #Concept #Types of relations #Uni ","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Undirected-Graphs":{"title":"Undirected  Graphs","content":"\n# Undirected  Graphs\nA set of set's which represents a graph\n![[Pasted image 20221013104503.png]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Uni":{"title":"Uni","content":"## Courses:\n- [[I en E Introductie]]\n- [[Foundations of Computer Science]]\n- [[Calculus]]\n- [[Studying and presenting]]\n- [[Essentials of computer systems]]\n- [[Linear Algebra for Computer Sciences]]","lastmodified":"2022-12-10T12:46:19.199420549Z","tags":null},"/Vectors":{"title":"Vectors","content":"## Definition:\n$$\\vec{AB} = \\begin{pmatrix} v_1\\\\v_2\\\\v_{3}\\\\...\\\\v_n\\end{pmatrix}$$\n### Addition:\n$$\\vec{A} + \\vec{B} =\n\\begin{pmatrix} 1\\\\ 1\\\\3\\end{pmatrix} + \\begin{pmatrix} 2\\\\ 2\\\\2\\end{pmatrix} = \\begin{pmatrix} 3\\\\ 3\\\\5\\end{pmatrix}$$\n### Scaler multiplication:\n$$\\begin{pmatrix} 1\\\\ 1\\\\3\\end{pmatrix} = \\begin{pmatrix} 2\\\\ 2\\\\6\\end{pmatrix}$$\n\n## Vector equation:\n\u003e[!abstract] Definition\n\u003e\n\u003eA vector equation is any equation involving linear combinations of vectors in $R^{n}$ and scalars in $R$\n\n## Span of vectors:\n\u003e[!abstract] Definition\n\u003e\n\u003e[Filmpje](https://www.youtube.com/watch?v=k7RM-ot2NWY\u0026list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab\u0026index=4)\n\n## Example:\n1ste example:\n![[Pasted image 20221108185550.png]]\n![[Pasted image 20221108185602.png]]\n2nd example:\n![[Pasted image 20221108185626.png]]\n","lastmodified":"2022-12-10T12:46:19.203420814Z","tags":null},"/Venn-diagrams":{"title":"Venn diagrams","content":"\n# Venn diagrams\n**course:**\n## Definition\nA diagram to visualize a [[set]].\nIn general, a Venn diagram of two sets consists of four areas: three inside the ovals, and one outside. The latter is sometimes forgotten. For three sets there are eight, for four sets sixteen.\n\n**Bad side of Venn diagrams**\nAfter 4 sets they get big and unreadable\n**Special diagrams**\n![[Pasted image 20220908103535.png]]\n\n**Examples**\n![[Pasted image 20220908102909.png]]\n![[Pasted image 20220908102940.png]]\n![[Pasted image 20220908103030.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Venn diagrams #Uni ","lastmodified":"2022-12-10T12:46:19.203420814Z","tags":null},"/Vijfkrachtenmodel":{"title":"Vijfkrachtenmodel","content":"\n# Vijfkrachtenmodel\n**course:**\n## Definition\nEen strategisch model dat uitgaat van vijf krachten die aantrekkelijkheid van een markt bepaald. Hierop kan de strategie van een [[organisatie]] afgestemd worden.\nBeantwoord de vraag:\n- *Als ik nog niet in de markt zit, wil ik dan deze markt betreden?*\n\n![[Pasted image 20220913103001.png|400]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Vijfkrachtenmodel #Uni ","lastmodified":"2022-12-10T12:46:19.203420814Z","tags":null},"/Visualizing-relationships-and-compositions":{"title":"Visualizing relationships \u0026 compositions","content":"## Definition\n![[Visualizing relationships 2022-09-29 09.10.33.excalidraw.svg]]\n![[Visualizing relationships 2022-09-29 09.10.33.excalidraw]]\n\n\n---\nTags: #Concept #Visualizing #relationships #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/Waardeketen":{"title":"Waardeketen","content":"\n# Waardeketen\n**course:**\n## Definition\nHoe leverd [[organisatie]] waarde.\n- Primaire activiteiten \n\t- hebben betrekking op ontwikkeling, verkoop en overdracht van het product.\n- ondersteunende activiteiten\n\t- activiteiten die de primaire activiteiten ondersteunen.\n![[Value-Chain-1.webp|400]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Waardeketen #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/XSS":{"title":"XSS","content":"\n# XSS\n## Definition\n\u003eXSS het het injecteren van javascript in een webpagina en staat voor Cross (X) site scriptin\n\n**Types of XSS:**\n\t-   Stored\n\t-   Reflected\n\t-   DOM\n**Detection:**\n1. Waar gaat de data naartoe? Wordt het opgeslagen? Komt het terug op de pagina?\n2. Hoe wordt data gehandled? word iets veranderd naar een link?\n3. Hoe worden speciale characters gebruikt? Probeer eerst `\u003c\u003e;:` \n\t- Schrijf op als er iets niet encode wordt zoals \u003c\n4. Als je in een atrribuut zit, bvb `\u003cimg src\" -- HIER -- \"\u003e`  kan je er met \" uit, als dat niet lukt gewoon door. \n5. Zit je in een script? Kan je uit de string? Zo niet dan secure\n6. Gebruik DOM events zoals \n```html\nonmouseover=alert(1)\n\u003c!-- Als je de url kan veranderen: --\u003e\n\u003ca href=\"http://www.uwu.nl\"\u003e\u003c/a\u003e\n\u003c!-- met een payload zoals --\u003e\nhttp://\"onmouseover=\"alert(1);\n\u003ca href=\"http://\"onmouseover=\"alert(1);\"\u003e\u003c/a\u003e\n```\n\n- Exploitation\n- Mitigation\n\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #XSS #Uni #BugBounty ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/abstraction":{"title":"abstraction","content":"\n# abstraction\n**course:**\n## Definition\nAbstraction is used to hide background details or any unnecessary implementation about the data so that users only see the required information.\nDiffrent abstraction steps:\n- digital [[abstraction]] to represent information \n- process [[abstraction]] \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #abstraction #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/address-space":{"title":"address space","content":"\n# address space\n**course:**\n## Definition\nA part of memory a proces gets to use. When proces A gets an address space it cannot use or change anything outside it's address space. When A needs more space the address space can be expanded by the [[operating system]]. A gets a local address in memory. The conversion between local memory and general memory is called address translation. \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #address space #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/asymptote":{"title":"asymptote","content":"## Horizontal\nThe line $y=l$ is called an horizontal asymptote of $y=f(x)$ if either $$\\lim_{x \\to \\infty} f(x) = l \\text{ or } \\lim_{x \\to -\\infty} f(x) = l$$\n## Vertical \n$$\\lim_{x\\to\\infty} \\frac{P(a)}{Q(a)}$$\n$$Q(a)=0 \\text{ and } P(x) \\neq 0$$\nif $Q(a)=0 \\text{ and } P(x) = 0$ it is an \n\n## Oblique:\n$y=ax+b$ for $f(x)$\n$$\\begin{align}\ny=f(x)\u0026=\\frac{x^2+1}{x}\\\\\n\u0026=x+\\frac{1}{x}\n\\end{align}$$\nStaartdeling, de $x$ is in dit geval de scheven [[asymptote]]\n\n---\nTags: #Concept #asymptote #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/cache":{"title":"cache","content":"\n# cache\n**course:**\n## Definition\nPlace to store things you want to access later, but you don't compute things on the cache. The computing is done on the [[registers]]. Size is often a few KB\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #cache #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/computer":{"title":"computer","content":"\n# computer\n**course:**\n## Definition\nparts of computer:\n- [[CPU]]\n- [[memory]] \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #computer #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/computer-architecture":{"title":"computer architecture","content":"\n# computer architecture\n**course:**\n## Definition\nThe physical side of a [[computer]].\n- [[Transistor]]\n- [[Combinational logic]]\n- [[instruction set]]\n- [[CPU]] \n- [[Assembler]]\n- [[Micro-architecture]]\n- [[IO]]\n- [[Microcontroller]]\n\nGeneral pipeline:\nReading from [[memory]] -\u003e Decoding -\u003e Execute with ALU -\u003e write back to [[memory]] \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #computer architecture #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/computer-networks":{"title":"computer networks","content":"\n# computer networks\n**course:**\n## Definition \nYou need to interact with [[IO]] in a specific way to create a network. A network consist of a few stops / layers :\n- [[Application layer]]\n- [[Transport layer]]\n- [[Network layer]]\n- [[Link layer]]\n- [[Physical layer]]\n\nThis model is called a TCPI model, a other model that is more complicated is called the OCI layer \n\n\n\n![[Pasted image 20220914094203.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #computer networks #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/computing-system":{"title":"computing system","content":"\n# computing system\n**course:**\n## Definition\nA [[computing system]] consists of computing devices: electronic, quantum, biological. Electronic computers run programs that may share computing resources. Larger systems typically consist of many interconnected computers.\nYou can think of computer systems:\n- operating systems \n- computer networks \n- computer architecture \n\n**Digital:**\nA digital computing system has discrete time. That means that there is a set time between instructions. There is also a discrete representation of information as bits. This allows for simple handeling of errors and imperfactions. Even though limited, this use of bits is very succesful.\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #computing system #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/concurreny":{"title":"concurreny","content":"\n# Concurreny\n**course:**\n## Definition\nSeveral processes running at the same time sharing the CPU.\nThere are various ways of running [[process]]es at the same time:\n- [[Multi-threading]]\n- [[Threads]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #concurreny #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/deadlocking":{"title":"deadlocking","content":"\n# deadlocking\n**course:**\n## Definition\nWhen [[Multi-threading]] two [[process]]es asks for mutual access of 2 parts of [[memory]], because of [[Race conditions]] they get caught in a deadlock:\nIn concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #deadlocking #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/driver":{"title":"driver","content":"\n# driver\n**course:**\n## Definition\nA interfaces to interact to lay a bridge between [[IO]] and your [[operating system]] \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #driver #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/factorization":{"title":"factorization","content":"\n","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/functions":{"title":"functions","content":"\n# functions\n**course:** Calculus\n## Definition\n- [[Palinomial]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #functions #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/functions-discr":{"title":"functions","content":"## Definition![[Screenshot 2022-10-06 at 09.46.29.png]]\n- [[Graph of func]]\n- [[Composition]]\n- [[Equipotence]]\n- [[Sequence]] \n## Notation:\nf: A→B  \n-\ty = f (x)\n-\tx |→ f (x)\n\nf: A -\u003e B\n- Every A only has one [[relation]] to a B\n- It can't have multiple [[relation]]s from A \n\n**Composition**\nThe composition of functions is associative([[Set algebra#Definition]])\n![[Pasted image 20221013092707.png|500]]\n## Identity function, Constant function\nIdentity:\n$f(x) = x$\n\nThe composition of the identity with the function:\n![[Pasted image 20221013091621.png|300]]\nConstant:\n![[Screenshot 2022-10-06 at 10.14.09.png]]\n\n\n## Terminology \n![[Screenshot 2022-10-06 at 10.16.53.png]]\n4. Pre Image: all possible values from f to x \n\n### Examples:\n![[Screenshot 2022-10-06 at 10.21.23.png]]\n\n---\nTags: #Concept #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/functions-linear":{"title":"","content":"\u003e[!abstract] Definition\n\u003e\n\u003e A transformation (function / map) T from $R^n$ to $R^m$ is a rule that assigns each $x \\in R^{n}$(domain) a vector $T(x)\\in R^m$(codomain).\n\u003e T(x) is the image of x under T. Image of T is ${T(x): x\\in R^n}$ written $T:R^{n}\\to R^m$\n\n\u003e[!abstract] Linear\n\u003e\n\u003e$T:R^{n}\\to R^{m}$ is linear if for all $x,y \\in R^{n}$ : $T(x+y) = T(x)+T(y)$ and for all $x\\in R^{n}$ and for all $C\\in R^{n}$: $T(C\\cdot x) = C\\cdot T(x)$\n\u003eThis means that $$T(\\begin{bmatrix} 0 \\\\0\\end{bmatrix}) = \\begin{bmatrix} 0 \\\\0\\end{bmatrix}$$ \n\u003e![[Pasted image 20221115184256.png]]\n\n\u003e[!abstract] Definition\n\u003e\n\u003eLet A be an m x n matrix and $T_{A}: R^{n}\\to R^{m}$, $\\vec{x}\\to A\\vec{x}$, A = $[\\vec{v_{1}}, \\vec{v_{2}}...., \\vec{v_{n}}]$ $T_A$ is linear \n\n\n\n## Examples:\n1. $$ T: R^{2}\\to R^1$$$$\\begin{bmatrix}  \nx \\\\  \ny   \n\\end{bmatrix} \\to [z]$$\n2. Transformation on the x-axis$$ T: R^{2}\\to R^2$$\n$$\\begin{bmatrix} x \\\\y\\end{bmatrix} \\to \\begin{bmatrix} x + 1 \\\\y\\end{bmatrix}=\\begin{bmatrix} x \\\\y\\end{bmatrix}+\\begin{bmatrix} 1 \\\\0\\end{bmatrix}$$\n3. $$ T: R^{2}\\to R^2$$\n$$\\begin{bmatrix} x \\\\y\\end{bmatrix} \\to \\begin{bmatrix} \\frac{1}{2}x + \\frac{3}{4}y \\\\ -\\frac{1}{2}x + \\frac{1}{4}y\\end{bmatrix}=x\\begin{bmatrix} \\frac{1}{2} \\\\ -\\frac{1}{2}\\end{bmatrix}+y\\begin{bmatrix} \\frac{3}{4} \\\\ \\frac{1}{4}\\end{bmatrix}$$\n","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/instruction-set":{"title":"instruction set","content":"\n# instruction set\n**course:**\n## Definition\n[[abstraction]] layer of [[Combinational logic]] \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #instruction set #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/intigers":{"title":"intigers","content":"\n# intigers\n**course:**\n## Definition\n**∈** = ELEMENT OF\nWhole numbers, positive called natural numbers\n$z = {0,1}$\nA number m devides n/n is divisible by m if there exists a number from Z(intiger)\nif $x=\\frac{m}{n}$ n divides by m, x = int\nif not, n is a rational number\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #intigers #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/liacs.leidenuniv.nl/~hoogeboom/focs/archief.html":{"title":"","content":"","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/memory":{"title":"memory","content":"\n# memory\n**course:**\n## Definition\nA place for the computer to store 0s and 1s. \nTypes of memory(from slow to fast) are:\n- [[registers]] \n- [[cache]] \n- [[RAM]] \n- Harddrive\n- Cache and memory are often swapped when a process needs them. When A needs to access [[RAM]] the [[operating system]] swaps it to [[cache]] for the proces to use. \nThe faster the memory, the more expensive it is.\n\nUses [[Combinational logic#^b656ea]](a lot of flipflops) to make memory\n\n**What to do when memory is full?** \n- The part of memory that is not used gets saved to the harddrive. This is saved in pages([[paging]]). \n\n## Backlinks\n- [[address space]]\n- [[segmentation]]\n- [[paging]]\n\n## Refrences:\n\n---\nTags: #Concept #memory #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/mulitset":{"title":"mulitset","content":"\n# mulitset\n**course:**\n## Definition\nA multiset is a set with duplicates that matter.\nNormal [[set]]:\n- A = {1,2,3}, B = {1,1,2,3}\n- A = B\nMultiset:\n- A = {1,2,3}, B = {1,1,2,3}\n- A != B\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #mulitset #Uni ","lastmodified":"2022-12-10T12:46:19.219421873Z","tags":null},"/operating-system":{"title":"operating system","content":"\n# operating system\n**course:**\n## Definition\nAn [[abstraction]] for humans to interact with computer. It distributes tasks over your hardware. That is called [[virtualisation]]. [[concurreny]] is used to make multiple things happen at the same time. [[persistence]] is used to store or save data. \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #operating system #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/organisatie":{"title":"organisatie","content":"\n# Organisatie\n**course:**\n## Definition\nEen [[organisatie]] is een **herkenbare** eenheid waarin **mensen** op **gecoordineerde** wijze en met behulp van **technische** en **financiele middelen**, **activiteiten** uitvoeren teneinde **gemeenschappelijk doelen** te realiseren \n\nEen samenwerkingsverband tussen 2 of meerdere personen. Krachten worden gebundeld om iets moois te maken:\n- Visie \n\t- Waarom bestaat deze [[organisatie]]? (lange termijn)\n- Missie \n\t- Waarom op korte termijn \n- Doelen \n\t- Wat gaan ze daadwerkelijk doen?\n- Strategie \n\t- Hoe gaan ze die doelen bereiken?\n\n### Hoe is een bedrijf opgebouwd:\nEen organistatie structuur is opgebouwd uit verschillende lagen, namelijk: een operationeel, tactisch en strategisch niveau. Iederen laag heeft zijn eigen taken en verantwoordelijkheid.\n- Strategie:\n\t- Hoofdkantoor albert heijen\n\t- lange termijn, CEO's\n- Tactical:\n\t- Per regio, communicatie laag, verteld aan de filialen van albertheijen wat het hoofdkantoor wilt \n\t- Doorvertaling van een lange termijn strategie naar korte termijn plan\n- Operational:\n\t- Per filiaal \n![[Three-Levels-of-Strategy-Pyramid.webp|300]]\n\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #Organisatie #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/paging":{"title":"paging","content":"\n# paging\n**course:**\n## Definition\nSmaller blocks in the [[memory]]. When [[process]] A wants a spefic part of [[memory]] it needs to request the whole page.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #paging #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/pairs":{"title":"pairs","content":"A set of all ordered pairs [0, 1], [2,5],[1,3] with x is part of A and y is part of B\n![[Pasted image 20220922093330.png|250]]\n\n2 pairs are equal:\n- $(a,b) = (c,d)$ if $a = c$ and $b = d$\n- (A, B) is not equal to (B, A)  -\u003e  *ELEMENTS*\n- {A, B} is equal to {B, A}  -\u003e  *SETS*\n\n## Example 1: (finite)\n```javascript\nfor (element_A in A){\n\tfor (element_B in B){\n\t\treturn (element_A, element_B)\n\t}\n}\n```\n![[Screenshot 2022-09-22 at 09.41.37.png]]\n\n## Example 1: (Infinite)\n![[Screenshot 2022-09-22 at 09.45.45.png]]\n\n## Counting:\n![[Pasted image 20220922094853.png]]\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #pairs #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/partition-set":{"title":"partition set","content":"\n# partition set\n**course:**\n## Definition\n### Rules:\n1. A is an partition set and contains ${A_{1}, A_{2}... A_{n}}$\n2. $A_i$ is part of $S$, and $A_1$ is not nothing.\n3. The intersection of $A_{i}\\text{ and }A_j$ is nothing zolang i niet j is \n4. De union van alle sets A zijn set S\n![[Screenshot 2022-09-22 at 09.21.30.png]]\n\n### Example:\n\u003e[!abstract] Definition\n\u003e\n\u003epartition of S: **some disjoint nonempty subsets that together** **are S.** \n\u003e{ {1,4}, {2}, {3,5,6} } is a partition of { 1,2,3,4,5,6 }\n\u003e*There is no overlap between them*\n\n\n![[Screenshot 2022-09-22 at 09.30.14.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #partitionn set #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/persistence":{"title":"persistence","content":"\n# persistence\n**course:**\n## Definition\nHolding data \n- [[IO]]\n- [[Data Storage]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #persistence #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/powerset-set":{"title":"powerset set","content":"\n## Definition\n\u003e[!abstract] Definition\n\u003e\n\u003epowerset of S: **it contains all subsets of a set S.** P ({a,b}) = { 0/, {a}, {b}, {a,b} } \n\n\n![[Screenshot 2022-09-22 at 09.08.46.png|150]]\n\n**Notation:** $P(A)$ or $2^A$\n\n\n![[Screenshot 2022-09-22 at 09.07.08.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #powerset #set #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/process":{"title":"process","content":"\n# process\n**course:**\n## Definition\nA process is a piece of code that is running on an device. These [[process]]es have:\n- process context and state \n- execution policies (makes sure processes don't interfere with each other) \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #process #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/program-counter":{"title":"program counter","content":"\n# program counter\n**course:**\n## Definition\nA counter that keeps track of the line of a program we're in. \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #program counter #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/protocols":{"title":"protocols","content":"\n# protocols\n**course:**\n## Definition\nA set of rules for communication. It ensures that information arrives in the right order. Protocols govern interaction of processes, computers over networks and between processor units and memory.\n\nExamples are:\n- DNS\n- HTTP\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #protocols #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/registers":{"title":"registers","content":"\n# registers\n**course:**\n## Definition\nExtremely fast and expensive and small memory. Computations are done directly from here.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #registers #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/relation":{"title":"relation","content":"\u003e[!abstract] Definition\n\u003e\n\u003eA relation is a subset of a Cartesian product. \n![[Pasted image 20220922101358.png|200]]\n\n## Different relations:\n- [[Identity relation]]\n- [[Representations]]\n- [[Inverse relation]]\n- [[Domain and range]]\n\n## Binary relation\n![[Pasted image 20220922100857.png]]\nA is related to B\n![[Pasted image 20220922100937.png|200]]\nA related to A means relation on A\n## Examples:\n![[Pasted image 20220922101459.png|600]]\n\n## Counting:\n![[Pasted image 20220922101838.png]]\n\n## Properties:\n![[Pasted image 20220922103721.png]]\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #relation #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/root":{"title":"root","content":"\n# root\n**course:**\n## Definition\nNumber R is called a root/zero of P(x) if P(x) = 0\n**Find root:** \n$p(x) = a1x + a2 = \\frac{a1}{a2}$\n$p(x)=ax^2+bx+c$\n\n**Root of multiplicity:**\n$P(x)=x^2$, $x=0$\nroot of multiplicity 2\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #root #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/segmentation":{"title":"segmentation","content":"\n# segmentation\n**course:**\n## Definition\nwhen there is not enough space to put 2 blocks of memory after each other the [[operating system]] will use segmentation to use 2 different blocks. localy these blocks will be consecutive but for the [[operating system]] these blocks are not after each other and they need to get mapped to diffrent parts. Segmentation is slow so it's best to use it as little as possible.\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #segmentation #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/set":{"title":"set","content":"\n# Set theory\n**course:**\n## Definition\nSet is a collection of things. A set is a concept intended to turn serveral seperate objects into one whole, new object. They are the basis of modern mathematics. A aset consists of elements.  \n- [[powerset set]] \n- [[partition set]] \n\n**Notation:**\nA = { 2, 3, 4, 5 }\n1 ∈ A \nA = {1, 2, 3, 4, 5}\n1 belongs to set A\n\n**Extensional**: explicity listing the elements using dots is necessary\nA = {1, 2, 3, 4} set with a set amount of elements \nB = {1, 2 ...}\nC = {1, 2, ..., 81, 82}\n\n**Intensional**\n{X | X is even and X \u003e= 0}  means:\n{0, 2, 4, ...}\n\n**Universal set**\nA = {0, 2, 4, 6, . . . } = {x|x is an integer ≥ 0 and x is even} \n                                          ⇓ \n                                U universal set\n\n**Subsets:**\n- [[Subsets]]\n\n**Set operations**\n- [[set operations]]\n\n**Other rules:**\n1. Order in a set does not matter, duplicates are irrelevant.\n\t{1, 2} = {2, 1} = {1, 2, 1}\n\tIf using a [[mulitset]], duplicates do matter\n2. Two sets are equal if they contain the same elements:\n\tA = B is defined as x ∈ A if and only if x ∈ B.\n\tx ∈ A \u003c=\u003e x ∈ B\n1 ∈ A \n1 belongs to set A\n\n**Examples:**\n![[Pasted image 20220908100556.png]]\n## Backlinks\n[[Venn diagrams]]\n[[Boolean operations]]\n[[Set algebra]]\n\n## Refrences:\n\n---\nTags: #Concept #set-theory #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/set-operations":{"title":"set operations","content":"\n# set operations\n**course:**\n## Definition\nFrom existing sets we can create new ones with operations on sets.\nThe basic operations are the *Boolean operations*: \n- union  \n- intersection \n- complement\n- difference\n\n## Union: ∪ \nCombine sets:\n![[Pasted image 20220908103744.png]]\n## Intersection: ∩\nIntersect sets \n![[Pasted image 20220908103809.png]]\n## Compliment:\nEverything outside A\n![[Pasted image 20220908104400.png]]\n## Difference:\nA - B\n![[Pasted image 20220908104457.png]]\n\n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #set operations #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/todo":{"title":"","content":"1. Paginas: ELLIOT EN EMMA\n- [ ] Inbox EMMA\n- [ ] Verzonden EMMA\n- [ ] Mail versturen ELLIOT\n- [ ] Uitlog knop Elliot\n\n2. Mail server: MANUEL\n- [ ] Mails kunnen versturen \n- [ ] Mails kunnen ontvangen/opslaan \n- [ ] Communicatie met de webserver \n- [ ] Mailclient en server in 1 ding\n\n3. Documentatie: ELLIOT EN EMMA\n- [ ] Mailserver ELLIOT\n- [ ] Docker documentatie MANUEL\n- [ ] Webserver documentatie EMMA\n- [ ] Pages documentatie MANUEL\n\t- [ ] JS","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null},"/virtualisation":{"title":"virtualisation","content":"\n# virtualisation\n**course:**\n## Definition\nJobs of the [[virtualisation]] layer in the [[operating system]]:\n**Processes** that are running on your device. These [[process]]es have:\n- process context and state \n- execution policies (makes sure processes don't interfere with each other)\n**Sharing cpu:**\n- Time is shared between the multiple processes.\n- [[Context switching]]\n- [[Scheduling policies]]\n**Sharing [[memory]]:**\n- [[Address space]]: A part of memory a proces gets to use. When proces A gets an address space it cannot use or change anything outside it's address space. When A needs more space the address space can be expanded by the [[operating system]]. A gets a local address in memory. The conversion between local memory and general memory is called address translation. \n- [[Segmentation]]: when there is not enough space to put 2 blocks of memory after each other the [[operating system]] will use segmentation to use 2 different blocks. localy these blocks will be consecutive but for the [[operating system]] these blocks are not after each other and they need to get mapped to diffrent parts. Segmentation is slow so it's best to use it as little as possible.\n- [[Paging]]: \n\t- Smaller blocks in the memory blocks. When proces A wants a spefic part of memory it needs to request the whole page.\n- diffrent types of memory: [[registers]], [[cache]], [[RAM]]:\n\t- Cache and memory are often swapped when a process needs them. When A needs to access [[RAM]] the [[operating system]] swaps it to [[cache]] for the proces to use. \n- What to do when memory is full? \n\t- The part of memory that is not used gets saved to the harddrive. This is saved in pages. \n- Hierarchy from slow to fast: Harddrive, [[RAM]], [[cache]], [[registers]]  \n## Backlinks\n\n## Refrences:\n\n---\nTags: #Concept #virtualisation #Uni ","lastmodified":"2022-12-10T12:46:19.223422138Z","tags":null}}